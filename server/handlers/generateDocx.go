package main

import (
	"context"
	"fmt"
	"log"
	"os"

	"github.com/google/generative-ai-go/genai"
	"google.golang.org/api/option"
)

func main() {
	ctx := context.Background()

	apiKey, ok := os.LookupEnv("GEMINI_API_KEY")
	if !ok {
		log.Fatalln("Environment variable GEMINI_API_KEY not set")
	}

	client, err := genai.NewClient(ctx, option.WithAPIKey(apiKey))
	if err != nil {
		log.Fatalf("Error creating client: %v", err)
	}
	defer client.Close()

	model := client.GenerativeModel("gemini-2.0-flash-exp")

	model.SetTemperature(1)
	model.SetTopK(40)
	model.SetTopP(0.95)
	model.SetMaxOutputTokens(8192)
	model.ResponseMIMEType = "text/plain"

	session := model.StartChat()
	session.History = []*genai.Content{
		{
			Role: "user",
			Parts: []genai.Part{
				genai.Text("You are an expert backend API documentation writer, specializing in creating concise, well-structured, and developer-friendly documentation. When provided with the **source code in JSON format**, your task is to analyze it and write clear backend API documentation in the following **Markdown format**:\n\n---\n\n### Documentation Format:\n```markdown\n// In markdown format\nRoute: {API endpoint route with method here}\nResponse: ```json\n{api response format in JSON, including relevant fields and respective status codes}\nSummary: {A short and precise summary describing the purpose and functionality of the API endpoint}\n```\n---\n\n### Example:\n```markdown\n// In markdown format\nRoute: GET /users\nResponse: ```json\n{\n    \"status\": 200,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"John Doe\",\n            \"email\": \"johndoe@example.com\"\n        }\n    ]\n}\n```\nSummary: Fetches and returns a list of all users.\n```\n---\n\n### Input Format:\nYou will receive the source code as a JSON object in the following structure:\n```json\n{\n    \"data\": {\n        \"fileNameWithExtension\": [\"string\"]\n    }\n}\n```\n\n### Your Task:\n1. Analyze the provided JSON source code file(s) based on the details given in the `\"fileNameWithExtension\"` array.\n2. Extract all relevant **API routes**, **response structures**, and their corresponding **functional summaries**.\n3. Generate the documentation in the specified **Markdown format**, maintaining clarity and developer usability.\n\n--- \n"),
			},
		},
		{
			Role: "model",
			Parts: []genai.Part{
				genai.Text("Okay, I understand the task. I will analyze the provided JSON source code representation, extract API route, response structure, and summary information, and then generate the documentation in the specified Markdown format. \n\nLet's get started. Please provide the JSON input containing the source code. I'm ready!\n"),
			},
		},
		{
			Role: "user",
			Parts: []genai.Part{
				genai.Text("{\n    \"data\": {\n        \"Backend/index.js\": [\n            \"const express = require(\\\"express\\\");\\nconst cors = require(\\\"cors\\\");\\nrequire(\\\"dotenv\\\").config();\\nconst LocalStrategy = require(\\\"passport-local\\\").Strategy;\\nconst passport = require(\\\"passport\\\");\\nconst session = require(\\\"express-session\\\");\\nconst MemoryStore = require(\\\"memorystore\\\")(session);\\n\\nconst app = express();\\nconst PORT = 5000;\\n\\nconst BlogModel = require(\\\"./models/Blog\\\");\\nconst UserModel = require(\\\"./models/Users\\\");\\n\\n//Cors:\\n// app.use(cors());\\napp.use(\\n    cors({\\n        origin: process.env.PRO\",\n            \"D_URL,\\n        methods: \\\"GET,HEAD,PUT,PATCH,POST,DELETE\\\",\\n        allowedHeaders: [\\\"Content-Type\\\", \\\"Authorization\\\"],\\n        credentials: true,\\n    }),\\n);\\n\\npassport.use(\\n    new LocalStrategy(async function(username, password, done) {\\n        try {\\n            const user = await UserModel.findOne({ Username: username });\\n\\n            if (!user) {\\n                return done(null, false, { message: \\\"Incorrect username.\\\" });\\n            }\\n\\n            if (user.Password !== password) {\\n            \",\n            \"    return done(null, false, { message: \\\"Incorrect password.\\\" });\\n            }\\n\\n            return done(null, user);\\n        } catch (err) {\\n            return done(err);\\n        }\\n    }),\\n);\\n\\npassport.serializeUser((user, done) => {\\n    done(null, user.id);\\n});\\n\\npassport.deserializeUser(async (id, done) => {\\n    try {\\n        const user = await UserModel.findById(id);\\n        done(null, user);\\n    } catch (err) {\\n        done(err);\\n    }\\n});\\n\\napp.use(express.json());\\napp.use(express.urlencoded\",\n            \"({ extended: false }));\\n\\napp.use(\\n    session({\\n        cookie: { maxAge: 86400000 },\\n        store: new MemoryStore({\\n            checkPeriod: 86400000, // prune expired entries every 24h\\n        }),\\n        resave: false,\\n        secret: \\\"jai Shree Ram\\\",\\n        saveUninitialized: false,\\n    }),\\n);\\napp.use(passport.initialize());\\napp.use(passport.session());\\n\\napp.get(\\\"/\\\", (req, res) => {\\n    res.send(\\\"Backend Working succesfully!!\\\");\\n});\\n\\n//Authentication:\\n\\napp.post(\\n    \\\"/login\\\",\\n    passport\",\n            \".authenticate(\\\"local\\\", {\\n        failureRedirect: `${process.env.PROD_URL}/Auth`,\\n    }),\\n    function(req, res) {\\n        const { _id, Username } = req.user;\\n        res.status(200).json({ Username, _id });\\n    },\\n);\\n\\napp.post(\\\"/register\\\", async (req, res) => {\\n    const existingUser = await UserModel.findOne({ Username: req.body.username });\\n\\n    if (existingUser) {\\n        return res\\n            .status(201)\\n            .json({ message: \\\"Username already taken\\\", Username: existingUser });\\n   \",\n            \" }\\n    const newUser = new UserModel({\\n        Username: req.body.username,\\n        Password: req.body.password,\\n    });\\n\\n    await newUser.save();\\n    res.status(200).json({ Username: req.body.username });\\n});\\n\\n//APIs:\\napp.get(\\\"/blogs\\\", async (req, res) => {\\n    try {\\n        const Blogs = await BlogModel.find().populate(\\\"User\\\");\\n        if (!Blogs || Blogs.length === 0) {\\n            return res.status(304).send(\\\"Couldn't fetch any data\\\");\\n        }\\n        res.status(200).json(Blogs);\\n    } ca\",\n            \"tch (error) {\\n        console.error(\\\"Error fetching blogs:\\\", error);\\n        res.status(500).send(\\\"Internal Server Error\\\");\\n    }\\n});\\n\\n//Editor/ViewAll\\napp.get(\\\"/:id/blogs\\\", async (req, res) => {\\n    const Id = req.params.id;\\n    const User = await UserModel.findById(Id).populate(\\\"Blogs\\\");\\n\\n    res.json({ Blogs: User.Blogs });\\n});\\n\\n//Home\\napp.get(\\\"/Blog/:id\\\", async (req, res) => {\\n    const id = req.params.id;\\n    const Blog = await BlogModel.findById(id);\\n    res.json(Blog).status(200);\\n});\\n\\nap\",\n            \"p.get(\\\"EditBlog/:id\\\", async (req, res) => {\\n    const id = req.params.id;\\n    const Blog = await BlogModel.findById(id);\\n    res.json(Blog).status(200);\\n});\\n\\n//POST Requests:\\napp.post(\\\"/:id/AddBlog\\\", async (req, res) => {\\n    try {\\n        const UserId = req.params.id;\\n\\n        const newBlog = new BlogModel({\\n            Title: req.body.title,\\n            Content: req.body.content,\\n            Preview: req.body.preview,\\n            Date: Date.now(),\\n            User: UserId,\\n        });\\n\\n       \",\n            \" const savedBlog = await newBlog.save(); // Save the new blog\\n\\n        await UserModel.findByIdAndUpdate(UserId, {\\n            $push: { Blogs: savedBlog._id },\\n        });\\n        res\\n            .status(201)\\n            .json({ message: \\\"Blog created successfully\\\", blog: newBlog });\\n    } catch (error) {\\n        console.error(\\\"Error creating blog:\\\", error);\\n        res.status(500).json({ message: \\\"Error creating blog\\\" });\\n    }\\n});\\n\\napp.post(\\\"/Edit/:id\\\", async (req, res) => {\\n    const { id } =\",\n            \" req.params;\\n    const { title, content, preview } = req.body;\\n    try {\\n        await BlogModel.findByIdAndUpdate(\\n            id,\\n            { Title: title, Content: content, Preview: preview },\\n            { new: true },\\n        );\\n        res.status(200).json({ message: \\\"Updated Successfully\\\" });\\n    } catch (error) {\\n        console.error(\\\"Error Updating the Blog\\\", error);\\n        res.status(500).json({ message: \\\"Internal Server Error\\\" });\\n    }\\n});\\n\\napp.delete(\\\"/Editor/RemoveBlog/:id\\\", as\",\n            \"ync (req, res) => {\\n    const { id } = req.params;\\n    try {\\n        const DeleteBlog = await BlogModel.findByIdAndDelete(id);\\n        res.status(200).json({ message: \\\"Blog Deleted Successfully\\\" });\\n\\n        if (!DeleteBlog) {\\n            return res.status(404).json({ message: \\\"Blog not found\\\" });\\n        }\\n    } catch (error) {\\n        console.error(\\\"Error deleting the blog\\\", error);\\n        res.status(500).json({ message: \\\"Internal Server error\\\" });\\n    }\\n});\\n\\napp.listen(PORT, () => {\\n    cons\",\n            \"ole.log(`Server is Listening on http://localhost:${PORT}`);\\n});\\n\"\n        ],\n        \"Backend/models/Blog.js\": [\n            \"const mongoose = require(\\\"mongoose\\\");\\nmongoose.connect(process.env.MONGO_URI);\\n\\nconst BlogSchema = mongoose.Schema({\\n    Title: {\\n        type: String,\\n        required: true,\\n    },\\n    Content: {\\n        type: Object,\\n        required: true,\\n    },\\n    Preview: {\\n        type: String,\\n    },\\n    Date: {\\n        type: Date,\\n    },\\n    User: {\\n        type: mongoose.Schema.Types.ObjectId,\\n        ref: \\\"Users\\\",\\n    },\\n});\\n\\nmodule.exports = mongoose.model(\\\"Blogs\\\", BlogSchema);\\n\"\n        ],\n        \"Backend/models/Users.js\": [\n            \"const mongoose = require(\\\"mongoose\\\");\\n\\nconst UserSchema = new mongoose.Schema({\\n    Username: {\\n        type: String,\\n    },\\n    Password: {\\n        type: String,\\n    },\\n    Blogs: [\\n        {\\n            type: mongoose.Schema.Types.ObjectId,\\n            ref: \\\"Blogs\\\",\\n        },\\n    ],\\n});\\n\\nmodule.exports = mongoose.model(\\\"Users\\\", UserSchema);\\n\"\n        ],\n        \"Backend/package.json\": [\n            \"{\\n  \\\"name\\\": \\\"backend\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"main\\\": \\\"index.js\\\",\\n  \\\"scripts\\\": {\\n    \\\"test\\\": \\\"echo \\\\\\\"Error: no test specified\\\\\\\" && exit 1\\\",\\n    \\\"start\\\": \\\"nodemon index.js\\\",\\n    \\\"dev\\\": \\\"nodemon index.js\\\"\\n  },\\n  \\\"author\\\": \\\"\\\",\\n  \\\"license\\\": \\\"ISC\\\",\\n  \\\"dependencies\\\": {\\n    \\\"cors\\\": \\\"^2.8.5\\\",\\n    \\\"dotenv\\\": \\\"^16.4.1\\\",\\n    \\\"express\\\": \\\"^4.18.2\\\",\\n    \\\"express-session\\\": \\\"^1.18.0\\\",\\n    \\\"memorystore\\\": \\\"^1.6.7\\\",\\n    \\\"moment\\\": \\\"^2.30.1\\\",\\n    \\\"mongoose\\\": \\\"^8.1.1\\\",\\n    \\\"passport\\\": \\\"^0.7.0\\\",\\n \",\n            \"   \\\"passport-local\\\": \\\"^1.0.0\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"nodemon\\\": \\\"^3.1.4\\\"\\n  }\\n}\\n\"\n        ],\n        \"Backend/vercel.json\": [\n            \"{ \\\"version\\\": 2,\\n  \\\"builds\\\": [\\n    {\\n      \\\"src\\\": \\\"*.js\\\",\\n      \\\"use\\\": \\\"@vercel/node\\\"\\n    }\\n  ],\\n  \\\"routes\\\": [\\n    {\\n      \\\"src\\\": \\\"/(.*)\\\",\\n      \\\"dest\\\": \\\"/\\\"\\n    }\\n  ]\\n}\\n\"\n        ],\n        \"blog-app/index.html\": [\n            \"<!doctype html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <link rel=\\\"icon\\\" type=\\\"image/svg+xml\\\" href=\\\"/blog.svg\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\\n    <title>Blog App</title>\\n  </head>\\n  <body>\\n    <div id=\\\"root\\\"></div>\\n    <script type=\\\"module\\\" src=\\\"/src/main.jsx\\\"></script>\\n  </body>\\n</html>\\n\"\n        ],\n        \"blog-app/package.json\": [\n            \"{\\n  \\\"name\\\": \\\"blog-app\\\",\\n  \\\"private\\\": true,\\n  \\\"version\\\": \\\"0.0.0\\\",\\n  \\\"type\\\": \\\"module\\\",\\n  \\\"scripts\\\": {\\n    \\\"dev\\\": \\\"vite\\\",\\n    \\\"build\\\": \\\"vite build\\\",\\n    \\\"lint\\\": \\\"eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0\\\",\\n    \\\"preview\\\": \\\"vite preview\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"@editorjs/checklist\\\": \\\"^1.6.0\\\",\\n    \\\"@editorjs/code\\\": \\\"^2.9.3\\\",\\n    \\\"@editorjs/delimiter\\\": \\\"^1.4.2\\\",\\n    \\\"@editorjs/editorjs\\\": \\\"^2.30.7\\\",\\n    \\\"@editorjs/embed\\\": \\\"^2.7.6\\\",\\n    \\\"@editorjs/header\\\": \\\"^2.8.8\\\",\\n\",\n            \"    \\\"@editorjs/image\\\": \\\"^2.10.1\\\",\\n    \\\"@editorjs/inline-code\\\": \\\"^1.5.1\\\",\\n    \\\"@editorjs/link\\\": \\\"^2.6.2\\\",\\n    \\\"@editorjs/list\\\": \\\"^2.0.3\\\",\\n    \\\"@editorjs/marker\\\": \\\"^1.4.0\\\",\\n    \\\"@editorjs/paragraph\\\": \\\"^2.11.7\\\",\\n    \\\"@editorjs/quote\\\": \\\"^2.7.6\\\",\\n    \\\"@editorjs/raw\\\": \\\"^2.5.1\\\",\\n    \\\"@editorjs/table\\\": \\\"^2.4.3\\\",\\n    \\\"@editorjs/warning\\\": \\\"^1.4.1\\\",\\n    \\\"@gsap/react\\\": \\\"^2.1.2\\\",\\n    \\\"@vercel/analytics\\\": \\\"^1.4.1\\\",\\n    \\\"axios\\\": \\\"^1.7.9\\\",\\n    \\\"gsap\\\": \\\"^3.12.7\\\",\\n    \\\"react\\\": \\\"^19.0.0\\\",\\n    \\\"react-dom\\\": \\\"^19.0.0\",\n            \"\\\",\\n    \\\"react-editor-js\\\": \\\"^2.1.0\\\",\\n    \\\"react-hot-toast\\\": \\\"^2.5.1\\\",\\n    \\\"react-icons\\\": \\\"^5.4.0\\\",\\n    \\\"react-loader-spinner\\\": \\\"^6.1.6\\\",\\n    \\\"react-markdown\\\": \\\"^9.0.3\\\",\\n    \\\"react-router-dom\\\": \\\"^7.1.3\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"@types/react\\\": \\\"^19.0.7\\\",\\n    \\\"@types/react-dom\\\": \\\"^19.0.3\\\",\\n    \\\"@vitejs/plugin-react\\\": \\\"^4.3.4\\\",\\n    \\\"autoprefixer\\\": \\\"^10.4.20\\\",\\n    \\\"postcss\\\": \\\"^8.5.1\\\",\\n    \\\"tailwindcss\\\": \\\"^3.4.17\\\",\\n    \\\"vite\\\": \\\"^6.0.11\\\"\\n  }\\n}\\n\"\n        ],\n        \"blog-app/postcss.config.js\": [\n            \"export default {\\n  plugins: {\\n    tailwindcss: {},\\n    autoprefixer: {},\\n  },\\n}\\n\"\n        ],\n        \"blog-app/src/AdminLayout.jsx\": [\n            \"import { Outlet, useNavigate } from \\\"react-router-dom\\\";\\nimport MobilePanel from \\\"./components/MobilePanel\\\";\\nimport { useContext, useEffect } from \\\"react\\\";\\nimport AuthContext from \\\"./context/AuthContext\\\";\\nfunction Admin() {\\n  const { user } = useContext(AuthContext);\\n  const navigate = useNavigate();\\n  useEffect(() => {\\n    if (!user) navigate(\\\"/\\\");\\n  });\\n  return (\\n    <>\\n      <div className=\\\"w-full min-h-screen bg-[#231e1d] flex\\\">\\n        <div className=\\\"sm:block flex flex-col\\\">\\n          <Out\",\n            \"let />\\n          <MobilePanel />\\n        </div>\\n      </div>\\n    </>\\n  );\\n}\\n\\nexport default Admin;\\n\"\n        ],\n        \"blog-app/src/EditBlogBase.jsx\": [\n            \"import React from \\\"react\\\";\\nimport { Outlet } from \\\"react-router-dom\\\";\\n\\nfunction EditBlogBase() {\\n  return (\\n    <>\\n      <Outlet />\\n    </>\\n  );\\n}\\n\\nexport default EditBlogBase;\\n\"\n        ],\n        \"blog-app/src/Layout.jsx\": [\n            \"import React, { useEffect } from \\\"react\\\";\\nimport { Outlet, useLocation } from \\\"react-router-dom\\\";\\nimport Footer from \\\"./components/Footer\\\";\\n\\nfunction Layout() {\\n  const { pathname } = useLocation();\\n\\n  useEffect(() => {\\n    // Scroll to the top of the page whenever the route changes\\n    window.scrollTo(0, 0);\\n  }, [pathname]);\\n\\n  return (\\n    <>\\n      <Outlet />\\n      <Footer />\\n    </>\\n  );\\n}\\n\\nexport default Layout;\\n\"\n        ],\n        \"blog-app/src/components/About.jsx\": [\n            \"function About() {\\n  return (\\n    <div>\\n      <h2 className=\\\"uppercase mb-5 text-xl\\\">About me</h2>\\n      <p>\\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit enim nam\\n        voluptatibus perferendis explicabo mollitia possimus cupiditate,\\n        pariatur dicta odio harum error vitae voluptas ab sint consequuntur.\\n        Suscipit numquam aliquam, aliquid\\n      </p>\\n    </div>\\n  );\\n}\\n\\nexport default About;\\n\"\n        ],\n        \"blog-app/src/components/AddBlog.jsx\": [\n            \"import { useContext, useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport EditorComponent from \\\"./Editor\\\";\\nimport toast from \\\"react-hot-toast\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\n// const INITIAL_DATA = {\\n//     time: new Date().getTime(),\\n//     blocks: [\\n//         {\\n//             type: \\\"header\\\",\\n//             data: {\\n//                 text: \\\"This is my awesome editor!\\\",\\n//                 level: 2,\\n//             }\",\n            \",\\n//         },\\n//     ],\\n// };\\n\\nfunction AddBlog() {\\n  const { user } = useContext(AuthContext);\\n\\n  const [title, settitle] = useState(\\\"\\\");\\n  const [content, setContent] = useState({});\\n  const [preview, setpreview] = useState(\\\"\\\");\\n  const [date, setdate] = useState(\\\"\\\");\\n\\n  const handleSubmit = async (e) => {\\n    e.preventDefault();\\n    settitle(\\\"\\\");\\n    setContent({});\\n    setpreview(\\\"\\\");\\n\\n    try {\\n      await axios.post(`${backendURL}/${user._id}/AddBlog`, {\\n        title,\\n        content,\\n \",\n            \"       preview,\\n        date,\\n      });\\n\\n      toast.success(\\\"Blog Submitted Successfully!!\\\");\\n      // console.log(\\\"Response:\\\", response.data);\\n    } catch (error) {\\n      toast.error(\\\"Something went wrong, Please try again later\\\");\\n      console.error(\\\"Error saving the blog\\\", error);\\n    }\\n  };\\n\\n  return (\\n    <>\\n      <div className=\\\"w-[100vw] min-h-screen lg:p-24 sm:p-5 sm:mb-20 text-[#b8b4b0]\\\">\\n        <h1 className=\\\"font-[Montserrat] text-2xl text-white uppercase\\\">\\n          Add Blog\\n     \",\n            \"   </h1>\\n        <hr className=\\\"mt-4 border-2 rounded\\\" />\\n        <div className=\\\"mt-10 w-full\\\">\\n          <form className=\\\"space-y-4  sm:w-[90vw]\\\" onSubmit={handleSubmit}>\\n            <div className=\\\"relative\\\">\\n              <label\\n                htmlFor=\\\"Title\\\"\\n                className=\\\"absolute text-lg top-0 left-0 -mt-3 ml-4 bg-[#231e1d] text-white font-[Montserrat] ]\\\"\\n              >\\n                Title\\n              </label>\\n              <input\\n                type=\\\"text\\\"\\n            \",\n            \"    name=\\\"Title\\\"\\n                value={title}\\n                onChange={(e) => settitle(e.target.value)}\\n                className=\\\"w-full px-4 py-4 border rounded-md focus:outline-none focus:border-blue-400 bg-transparent font-[Alegreya] placeholder:opacity-20 placeholder:text-white \\\"\\n                required\\n                placeholder=\\\"Title for the blog\\\"\\n              />\\n            </div>\\n            <div className=\\\"relative\\\">\\n              <label\\n                htmlFor=\\\"Preview\\\"\\n        \",\n            \"        className=\\\"absolute text-lg bg-[#231e1d] top-0 left-0 -mt-3 ml-4 text-white font-[Montserrat] font-extralight\\\"\\n              >\\n                Preview\\n              </label>\\n              <textarea\\n                name=\\\"Preview\\\"\\n                value={preview}\\n                onChange={(e) => setpreview(e.target.value)}\\n                className=\\\"w-full min-h-[20vh] px-2 py-4  border rounded-md focus:outline-none focus:border-blue-400 bg-transparent font-[Alegreya] placeholder:opacity-20\",\n            \" placeholder:text-white \\\"\\n                required\\n                placeholder=\\\"Only upto 100 words\\\"\\n              />\\n            </div>\\n            <h1>Edit your blog here, Press \\\"/\\\" to start editing</h1>\\n            <div className=\\\"relative w-full bg-neutral-100 font-[Alegreya] rounded-md flex p-5\\\">\\n              <EditorComponent\\n                initialData={{}}\\n                onContentChange={(data) => setContent(data)}\\n              />\\n            </div>\\n            <button\\n              ty\",\n            \"pe=\\\"submit\\\"\\n              className=\\\"w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition duration-300\\\"\\n            >\\n              Submit\\n            </button>\\n          </form>\\n        </div>\\n      </div>\\n    </>\\n  );\\n}\\n\\nexport default AddBlog;\\n\"\n        ],\n        \"blog-app/src/components/Auth.jsx\": [\n            \"import { Link } from \\\"react-router-dom\\\";\\n\\nexport default function Auth() {\\n    return (\\n        <>\\n            <div className=\\\"mt-10\\\">\\n                <h1 className=\\\"text-xl\\\">Want to write your own blogs?</h1>\\n                <div className=\\\"mt-5 flex gap-2\\\">\\n                    <Link\\n                        to=\\\"/Auth\\\"\\n                        className=\\\"border-2 border-[#b8b4b0] rounded-md p-4 \\\"\\n                    >\\n                        Sign In\\n                    </Link>\\n                </d\",\n            \"iv>\\n            </div>\\n        </>\\n    );\\n}\\n\"\n        ],\n        \"blog-app/src/components/BlogContent.jsx\": [\n            \"import React, { useState, useEffect } from \\\"react\\\";\\nimport Markdown from \\\"react-markdown\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nfunction BlogContent({ content }) {\\n  const { Title, Content, Date: uploadDate } = content;\\n  const [FDate, setFDate] = useState(uploadDate);\\n\\n  function formatDate() {\\n    const blogDate = new Date(uploadDate);\\n    const formattedDate = blogDate.toLocaleDateString(\\\"en-US\\\", {\\n      month: \\\"long\\\",\\n      day: \\\"numeric\\\",\\n      year: \\\"numeric\\\",\\n    });\\n    setFDate(for\",\n            \"mattedDate);\\n  }\\n\\n  useEffect(() => {\\n    if (content) {\\n      formatDate();\\n    }\\n  }, [content]);\\n\\n  return (\\n    <>\\n      <div className=\\\"lg:w-[45%]\\\">\\n        <p className=\\\"text-[#737170] text-l\\\">{FDate}</p>\\n        <p className=\\\"text-2xl my-2 underline\\\">{Title}</p>\\n        <div className=\\\"content my-10 space-y-4\\\">\\n          {Content &&\\n            Content?.blocks?.map((block) => {\\n              switch (block.type) {\\n                case \\\"header\\\":\\n                  return (\\n                  \",\n            \"  <h1\\n                      key={block.id}\\n                      className={`text-${block.data.level}xl font-bold`}\\n                    >\\n                      {block.data.text}\\n                    </h1>\\n                  );\\n                case \\\"paragraph\\\":\\n                  return (\\n                    <p\\n                      key={block.id}\\n                      dangerouslySetInnerHTML={{ __html: block.data.text }}\\n                    />\\n                  );\\n                // case \\\"list\\\":\\n  \",\n            \"              //     return (\\n                //         <ul\\n                //             key={block.id}\\n                //             className={\\n                //                 block.data.style === \\\"ordered\\\"\\n                //                     ? \\\"list-decimal\\\"\\n                //                     : \\\"list-disc\\\"\\n                //             }\\n                //         >\\n                //             {block.data.items.map((item, idx) => (\\n                //                 <li key=\",\n            \"{idx}>{item}</li>\\n                //             ))}\\n                //         </ul>\\n                //     );\\n                case \\\"table\\\":\\n                  return (\\n                    <table\\n                      key={block.id}\\n                      className=\\\"table-auto border-collapse border border-gray-300 my-4\\\"\\n                    >\\n                      <tbody>\\n                        {block.data.content.map((row, rowIndex) => (\\n                          <tr key={rowIndex}>\\n           \",\n            \"                 {row.map((cell, cellIndex) => (\\n                              <td\\n                                key={cellIndex}\\n                                className=\\\"border border-gray-300 px-2 py-1\\\"\\n                              >\\n                                {cell}\\n                              </td>\\n                            ))}\\n                          </tr>\\n                        ))}\\n                      </tbody>\\n                    </table>\\n                  );\\n            \",\n            \"    // case \\\"quote\\\":\\n                //     return (\\n                //         <blockquote\\n                //             key={block.id}\\n                //             className=\\\"border-l-4 border-gray-400 pl-4 italic my-4\\\"\\n                //         >\\n                //             {block.data.text}\\n                //             <footer className=\\\"text-sm text-gray-500\\\">\\n                //                 {block.data.caption}\\n                //             </footer>\\n                //        \",\n            \" </blockquote>\\n                //     );\\n                case \\\"code\\\":\\n                  return (\\n                    <pre\\n                      key={block.id}\\n                      className=\\\"bg-gray-900 text-white p-4 rounded-lg my-4 \\\"\\n                    >\\n                      <code>{block.data.code}</code>\\n                    </pre>\\n                  );\\n                case \\\"delimiter\\\":\\n                  return <hr key={block.id} className=\\\"my-4 border-gray-300\\\" />;\\n                default:\\n\",\n            \"                  return null;\\n              }\\n            })}\\n        </div>\\n        <Link to={`/`} className=\\\"text-white underline italic\\\">\\n          Go Back\\n        </Link>\\n      </div>\\n    </>\\n  );\\n}\\n\\nexport default BlogContent;\\n\"\n        ],\n        \"blog-app/src/components/BlogList.jsx\": [\n            \"import BlogPrev from \\\"./BlogPrev\\\";\\n\\nfunction BlogList({ BlogsData }) {\\n    if (BlogsData.length == 0) {\\n        return (\\n            <div className=\\\"flex lg:w-[45%] sm:w-full lg:justify-center sm:justify-normal\\\">\\n                <h1 className=\\\"text-center text-2xl\\\">You have no blogs available..</h1>\\n            </div>\\n        );\\n    }\\n    return (\\n        <>\\n            <div className=\\\"flex text-[#b8b4b0] lg:w-[45%] sm:w-full flex-col gap-10\\\">\\n                {BlogsData.map((Blog) => (\\n         \",\n            \"           <BlogPrev key={Blog._id} Blogs={Blog} />\\n                ))}\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport default BlogList;\\n\"\n        ],\n        \"blog-app/src/components/BlogPrev.jsx\": [\n            \"import React, { useState, useEffect } from \\\"react\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nfunction BlogPrev({ Blogs }) {\\n    const { Title, Preview, Date: uploadDate, _id } = Blogs;\\n    const [FDate, setFDate] = useState(uploadDate);\\n\\n    function formatDate() {\\n        const blogDate = new Date(uploadDate);\\n        const FomattedDate = blogDate.toLocaleDateString(\\\"en-US\\\", {\\n            month: \\\"long\\\",\\n            day: \\\"numeric\\\",\\n            year: \\\"numeric\\\",\\n        });\\n        setFDate(Fomat\",\n            \"tedDate);\\n    }\\n    useEffect(() => {\\n        formatDate();\\n    }, []);\\n\\n    return (\\n        <>\\n            <div>\\n                <p className=\\\"text-[#737170] text-l\\\">{FDate}</p>\\n                <p className=\\\"text-2xl my-2 line-clamp-2 w-full\\\">{Title}</p>\\n                <p className=\\\"my-6 line-clamp-5\\\">{Preview}</p>\\n\\n                <Link to={`/Blog/${_id}`} className=\\\"text-[#737170] italic\\\">\\n                    Read more\\n                </Link>\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport \",\n            \"default BlogPrev;\\n\"\n        ],\n        \"blog-app/src/components/EditBlog.jsx\": [\n            \"import { useState, useEffect, useContext } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\nimport { MdEdit } from \\\"react-icons/md\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport { InfinitySpin } from \\\"react-loader-spinner\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nfunction EditBlog() {\\n    const { user } = useContext(AuthContext);\\n    const [Data, setData] = useState([{}]);\\n    const [loading, setLoading] = useState(false);\\n\\n    useEffec\",\n            \"t(() => {\\n        async function fetchBlogs() {\\n            setLoading(true);\\n            const response = await axios.get(`${backendURL}/${user._id}/blogs`);\\n            setData(response.data.Blogs);\\n            setLoading(false);\\n        }\\n        fetchBlogs();\\n    }, []);\\n\\n    return (\\n        <>\\n        <div className=\\\"lg:p-24 sm:p-5 w-[100vw] min-h-screen text-[#b8b4b0]\\\">\\n                <h1 className=\\\"font-[Montserrat] text-2xl text-white uppercase\\\">\\n                    Edit Blogs\\n        \",\n            \"        </h1>\\n                <hr className=\\\"mt-4 border-2 rounded\\\" />\\n                {loading ? (\\n                    <InfinitySpin\\n                        visible={true}\\n                        width=\\\"200\\\"\\n                        color=\\\"white\\\"\\n                        ariaLabel=\\\"infinity-spin-loading\\\"\\n                    />\\n                ) : (\\n                    <>\\n                        {Data.length === 0 && (\\n                            <h1 className=\\\"text-center text-2xl mt-10 font-[Mon\",\n            \"tserrat] whitespace-nowrap\\\">\\n                                No blogs available\\n                            </h1>\\n                        )}\\n                        {Data.map((blog) => (\\n                            <div className=\\\"text-lg\\\" key={blog._id}>\\n                                <div className=\\\"mt-10 flex justify-between items-center\\\">\\n                                    <h2 className=\\\"font-bold uppercase text-white truncate\\\">\\n                                        Title - {' '}\\n       \",\n            \"                                 <span className=\\\"text-[#b8b4b0] normal-case\\\">\\n                                            {blog.Title}\\n                                        </span>\\n                                    </h2>\\n                                    <Link to={`Edit/${blog._id}`}>\\n                                        <MdEdit className=\\\"text-blue-700 text-3xl hover:scale-125 transition-all ease-in-out cursor-pointer\\\" />\\n                                    </Link>\\n                   \",\n            \"             </div>\\n                                <hr className=\\\"mt-2 border-dashed\\\" />\\n                            </div>\\n                        ))}\\n                    </>\\n                )}\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport default EditBlog;\\n\"\n        ],\n        \"blog-app/src/components/EditForm.jsx\": [\n            \"import React, { useEffect, useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\nimport { useNavigate, useParams } from \\\"react-router-dom\\\";\\nimport EditorComponent from \\\"./Editor\\\";\\nimport { InfinitySpin } from \\\"react-loader-spinner\\\";\\nimport toast from \\\"react-hot-toast\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nfunction EditForm() {\\n    const navigate = useNavigate();\\n    const { id } = useParams();\\n    const [title, settitle] = useState({});\\n    const [content, setContent] = useState(\",\n            \"{});\\n    const [preview, setpreview] = useState({});\\n    const [loading, setLoading] = useState(true);\\n\\n    async function fetchBlog() {\\n        try {\\n            const response = await axios.get(`${backendURL}/Blog/${id}`);\\n            settitle(response.data.Title);\\n            const { time, blocks } = response.data.Content;\\n            setContent({ time, blocks });\\n            console.log(content);\\n            setpreview(response.data.Preview);\\n        } catch (error) {\\n            console.err\",\n            \"or(\\\"Error fetching blog data\\\", error);\\n        } finally {\\n            setLoading(false);\\n        }\\n    }\\n\\n    useEffect(() => {\\n        fetchBlog();\\n    }, []);\\n\\n    const handleSubmit = async (e) => {\\n        e.preventDefault();\\n        // settitle(\\\"\\\");\\n        // setContent({});\\n        // setpreview(\\\"\\\");\\n\\n        try {\\n            await axios.post(`${backendURL}/Edit/${id}`, {\\n                title,\\n                content,\\n                preview,\\n            });\\n\\n            toast.success(\",\n            \"\\\"Blog Edited Successfully!!\\\");\\n            navigate(\\\"/Editor/ViewAll\\\");\\n        } catch (error) {\\n            console.error(\\\"Error editing the blog\\\", error);\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"lg:p-24 sm:p-5 w-[100vw] min-h-screen text-[#b8b4b0]\\\">\\n            <h1 className=\\\"font-[Montserrat] text-2xl text-white uppercase\\\">\\n                Edit Blog\\n            </h1>\\n            <hr className=\\\"mt-4 border-2 rounded\\\" />\\n            {loading ? (\\n                <InfinitySpin\\n   \",\n            \"                 visible={true}\\n                    width=\\\"200\\\"\\n                    color=\\\"white\\\"\\n                    ariaLabel=\\\"infinity-spin-loading\\\"\\n                />\\n            ) : (\\n                <div className=\\\"mt-10\\\">\\n                    <form className=\\\"space-y-4\\\" onSubmit={handleSubmit}>\\n                        <div className=\\\"relative\\\">\\n                            <label\\n                                htmlFor=\\\"Title\\\"\\n                                className=\\\"absolute text-lg top-\",\n            \"0 left-0 -mt-3 ml-4 bg-[#231e1d] text-white font-[Montserrat] ]\\\"\\n                            >\\n                                Title\\n                            </label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                name=\\\"Title\\\"\\n                                value={title}\\n                                onChange={(e) => settitle(e.target.value)}\\n                                className=\\\"w-full px-4 py-4 border rounded-md focus:o\",\n            \"utline-none focus:border-blue-400 bg-transparent font-[Alegreya] \\\"\\n                                required\\n                            />\\n                        </div>\\n                        <div className=\\\"relative w-full bg-neutral-100 font-[Alegreya] rounded-md flex p-5\\\">\\n                            <EditorComponent\\n                                initialData={content}\\n                                onContentChange={(data) => setContent(data)}\\n                            />\\n              \",\n            \"          </div>\\n                        <div className=\\\"relative\\\">\\n                            <label\\n                                htmlFor=\\\"Preview\\\"\\n                                className=\\\"absolute text-lg bg-[#231e1d] top-0 left-0 -mt-3 ml-4 text-white font-[Montserrat] font-extralight\\\"\\n                            >\\n                                Preview\\n                            </label>\\n                            <textarea\\n                                name=\\\"Preview\\\"\\n            \",\n            \"                    value={preview}\\n                                onChange={(e) => setpreview(e.target.value)}\\n                                className=\\\"w-full min-h-[20vh] px-2 py-4  border rounded-md focus:outline-none focus:border-blue-400 bg-transparent font-[Alegreya]\\\"\\n                                required\\n                            />\\n                        </div>\\n                        <button\\n                            type=\\\"submit\\\"\\n                            className=\\\"w-full\",\n            \" bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition duration-300\\\"\\n                        >\\n                            Submit\\n                        </button>\\n                    </form>\\n                </div>\\n            )}\\n        </div>\\n    );\\n}\\n\\nexport default EditForm;\\n\"\n        ],\n        \"blog-app/src/components/Editor.jsx\": [\n            \"import React, { useEffect, useRef, useState } from \\\"react\\\";\\nimport EditorJS from \\\"@editorjs/editorjs\\\";\\nimport { EDITOR_JS_TOOLS } from \\\"../utils/editorTools\\\";\\n\\nconst EditorComponent = ({ onContentChange, initialData }) => {\\n  const ejInstance = useRef(null);\\n  const [isLoading, setIsLoading] = useState(true);\\n\\n  const initEditor = () => {\\n    // Destroy any existing editor instance before reinitializing\\n    if (ejInstance.current) {\\n      ejInstance.current.destroy();\\n    }\\n\\n    const editor = n\",\n            \"ew EditorJS({\\n      tools: EDITOR_JS_TOOLS,\\n      holder: \\\"editorjs\\\",\\n      onReady: () => {\\n        ejInstance.current = editor;\\n        setIsLoading(false); // Editor is ready\\n        console.log(\\\"Editor initialized successfully\\\");\\n      },\\n      // autofocus: true,\\n      data: { time: initialData.time, blocks: initialData.blocks } || {},\\n      onChange: async () => {\\n        try {\\n          const content = await editor.saver.save();\\n          if (onContentChange) {\\n            onContentChange\",\n            \"(content);\\n          }\\n        } catch (error) {\\n          console.error(\\\"Error saving editor content:\\\", error);\\n        }\\n      },\\n    });\\n\\n    editor.isReady.catch((error) => {\\n      console.error(\\\"Editor initialization failed:\\\", error);\\n      setIsLoading(false);\\n    });\\n  };\\n\\n  useEffect(() => {\\n    initEditor();\\n\\n    return () => {\\n      if (ejInstance.current) {\\n        ejInstance.current.destroy();\\n        ejInstance.current = null;\\n      }\\n    };\\n  }, []); // Reinitialize when initialDat\",\n            \"a changes\\n\\n  return (\\n    <>\\n      {isLoading && (\\n        <div className=\\\"flex justify-center items-center min-h-[300px]\\\">\\n          <p className=\\\"text-gray-500\\\">Loading editor...</p>\\n        </div>\\n      )}\\n      <div\\n        id=\\\"editorjs\\\"\\n        className={`text-black ${isLoading ? \\\"hidden\\\" : \\\"\\\"}`}\\n      ></div>\\n    </>\\n  );\\n};\\n\\nexport default EditorComponent;\\n\"\n        ],\n        \"blog-app/src/components/Footer.jsx\": [\n            \"import React from \\\"react\\\";\\nimport { FaGithub } from \\\"react-icons/fa\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nconst Footer = () => {\\n    return (\\n        <>\\n            <div className=\\\"flex z-10 flex-col sm:hidden\\\">\\n                <div className=\\\"copyright flex justify-between items-center lg:px-10 sm:px-5 h-[10vh] bg-[#111117] text-white\\\">\\n                    <p className=\\\"sm:text-sm\\\">\\n                        DevDiary&copy; 2023, All rights reserved{\\\" \\\"}\\n                    </p>\\n            \",\n            \"        <Link to=\\\"https://github.com/AvadhootSmart/Av_Blog-App_FS\\\">\\n                        <FaGithub className=\\\"lg:text-3xl sm:text-lg hover:scale-110 transition\\\" />\\n                    </Link>\\n                </div>\\n            </div>\\n        </>\\n    );\\n};\\n\\nexport default Footer;\\n\"\n        ],\n        \"blog-app/src/components/Line.jsx\": [\n            \"import React from 'react'\\n\\nfunction Line() {\\n  return (\\n    <div className='w-[20%] h-1 rounded bg-[#b8b4b0]'></div>\\n  )\\n}\\n\\nexport default Line\\n\"\n        ],\n        \"blog-app/src/components/MobilePanel.jsx\": [\n            \"import { Link } from \\\"react-router-dom\\\";\\nimport { HiViewList } from \\\"react-icons/hi\\\";\\nimport { IoMdAdd } from \\\"react-icons/io\\\";\\nimport { MdEdit } from \\\"react-icons/md\\\";\\nimport { FaHome } from \\\"react-icons/fa\\\";\\nimport { MdDeleteForever } from \\\"react-icons/md\\\";\\n\\nconst MobilePanel = () => {\\n    return (\\n        <div className=\\\"fixed bottom-0 h-20 w-full sm:bg-[#231e1d] lg:bg-neutral-900 sm:border-t flex gap-10 sm:gap-12 text-white text-2xl justify-center\\\">\\n            <Link to=\\\"/Editor/ViewAll\\\" cla\",\n            \"ssName=\\\"flex items-center gap-4\\\">\\n                <HiViewList />\\n            </Link>\\n            <Link to=\\\"/Editor/AddBlog\\\" className=\\\"flex items-center gap-4\\\">\\n                <IoMdAdd />\\n            </Link>\\n            <Link to=\\\"/\\\" className=\\\"flex items-center gap-4\\\">\\n                <FaHome />\\n            </Link>\\n            <Link to=\\\"/Editor/EditBlog\\\" className=\\\"flex items-center gap-4\\\">\\n                <MdEdit />\\n            </Link>\\n            <Link to=\\\"/Editor/RemoveBlog\\\" className=\\\"flex \",\n            \"items-center gap-4\\\">\\n                <MdDeleteForever />\\n            </Link>\\n        </div>\\n    );\\n};\\n\\nexport default MobilePanel;\\n\"\n        ],\n        \"blog-app/src/components/Panel.jsx\": [\n            \"imaaport React from \\\"react\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nimport { HiViewList } from \\\"react-icons/hi\\\";\\nimport { IoMdAdd, IoMdRemove } from \\\"react-icons/io\\\";\\nimport { MdEdit, MdOutlineFormatColorFill } from \\\"react-icons/md\\\";\\nimport { FaHome } from \\\"react-icons/fa\\\";\\nimport { MdDeleteForever } from \\\"react-icons/md\\\";\\n\\nfunction Panel() {\\n    return (\\n        <>\\n            <div className=\\\"lg:w-[20vw] z-0 h-screen fixed bg-[#111117] text-white\\\">\\n                <div className=\\\"p-10 text-x\",\n            \"l uppercase font-[Montserrat] font-light\\\">\\n                    Admin Panel\\n                    <div className=\\\"mt-14 text-lg\\\">\\n                        <Link to=\\\"/Editor/ViewAll\\\" className=\\\"flex items-center gap-4\\\">\\n                            <HiViewList /> View All\\n                        </Link>\\n                    </div>\\n                    <div className=\\\"mt-14 text-lg\\\">\\n                        <Link to=\\\"/Editor/AddBlog\\\" className=\\\"flex items-center gap-4\\\">\\n                            <IoMdA\",\n            \"dd /> Create Blog\\n                        </Link>\\n                    </div>\\n                    <div className=\\\"mt-14 text-lg\\\">\\n                        <Link to=\\\"/Editor/RemoveBlog\\\" className=\\\"flex items-center gap-4\\\">\\n                            <MdDeleteForever /> Delete Blog\\n                        </Link>\\n                    </div>\\n                    <div className=\\\"mt-14 text-lg\\\">\\n                        <Link to=\\\"/Editor/EditBlog\\\" className=\\\"flex items-center gap-4\\\">\\n                    \",\n            \"        <MdEdit /> Edit Blog\\n                        </Link>\\n                    </div>\\n                    <div className=\\\"mt-14 text-lg\\\">\\n                        <Link to=\\\"/\\\" className=\\\"flex items-center gap-4\\\">\\n                            <FaHome /> Home Page\\n                        </Link>\\n                    </div>\\n                </div>\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport default Panel;\\n\"\n        ],\n        \"blog-app/src/components/Recent.jsx\": [\n            \"import React from \\\"react\\\";\\n\\nfunction Recent({ list }) {\\n  return (\\n    <>\\n      <div className=\\\"mt-14\\\">\\n        <h1 className=\\\"uppercase text-xl\\\">Recent Posts</h1>\\n        <div className=\\\"flex flex-col mt-5 gap-1\\\">\\n          <li className=\\\"list-none underline text-l\\\">Title</li>\\n        </div>\\n      </div>\\n    </>\\n  );\\n}\\n\\nexport default Recent;\\n\"\n        ],\n        \"blog-app/src/components/RemoveBlogs.jsx\": [\n            \"import axios from \\\"axios\\\";\\nimport { useContext, useEffect, useState } from \\\"react\\\";\\nimport { MdDeleteForever } from \\\"react-icons/md\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport { InfinitySpin } from \\\"react-loader-spinner\\\";\\nimport toast from \\\"react-hot-toast\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nfunction RemoveBlogs() {\\n  const { user } = useContext(AuthContext);\\n  const [Data, setData] = useState([{}]);\\n  const [loading, setLoading] = useState(false);\\n\\n  async fu\",\n            \"nction DeleteBlog(id) {\\n    try {\\n      await axios.delete(`${backendURL}/Editor/RemoveBlog/${id}`);\\n      setData((prevData) => prevData.filter((blog) => blog._id !== id));\\n      toast.success(\\\"Blog Deleted Successfully!!\\\");\\n    } catch (err) {\\n      toast.error(\\\"Something went wrong, try again later\\\");\\n      console.log(\\\"Error deleting the blog\\\", err);\\n    }\\n  }\\n\\n  async function fetchBlogs() {\\n    setLoading(true);\\n    try {\\n      const response = await axios.get(`${backendURL}/${user._id}/bl\",\n            \"ogs`);\\n      setData(response.data.Blogs);\\n    } catch (error) {\\n      console.error(\\\"Error fetching blogs\\\", error);\\n    } finally {\\n      setLoading(false);\\n    }\\n  }\\n\\n  useEffect(() => {\\n    fetchBlogs();\\n  }, []);\\n\\n  return (\\n    <div className=\\\"lg:p-24 sm:p-5 w-[100vw] min-h-screen text-[#b8b4b0]\\\">\\n      <h1 className=\\\"font-[Montserrat] text-2xl text-white uppercase\\\">\\n        Remove Blog\\n      </h1>\\n      <hr className=\\\"mt-4 border-2 rounded\\\" />\\n      {loading ? (\\n        <InfinitySpin\\n     \",\n            \"     visible={true}\\n          width=\\\"200\\\"\\n          color=\\\"white\\\"\\n          ariaLabel=\\\"infinity-spin-loading\\\"\\n        />\\n      ) : (\\n        <>\\n          {Data.length === 0 && (\\n            <h1 className=\\\"text-center text-2xl mt-10 font-[Montserrat] whitespace-nowrap\\\">\\n              No blogs available\\n            </h1>\\n          )}\\n          {Data.map((blog) => (\\n            <div className=\\\"text-lg\\\" key={blog._id}>\\n              <div className=\\\"mt-10 flex justify-between items-center\\\">\\n         \",\n            \"       <h2 className=\\\"font-bold uppercase text-white truncate\\\">\\n                  Title-{\\\" \\\"}\\n                  <span className=\\\"text-[#b8b4b0] normal-case\\\">\\n                    {blog.Title}\\n                  </span>\\n                </h2>\\n                <MdDeleteForever\\n                  onClick={() => DeleteBlog(blog._id)}\\n                  className=\\\"text-red-700 text-3xl hover:scale-125 transition-all ease-in-out cursor-pointer\\\"\\n                />\\n              </div>\\n              <hr class\",\n            \"Name=\\\"mt-2 border-dashed\\\" />\\n            </div>\\n          ))}\\n        </>\\n      )}\\n    </div>\\n  );\\n}\\n\\nexport default RemoveBlogs;\\n\"\n        ],\n        \"blog-app/src/components/Title.jsx\": [\n            \"import Line from \\\"./Line\\\";\\nimport gsap from \\\"gsap\\\";\\nimport { useGSAP } from \\\"@gsap/react\\\";\\nfunction Title({ title }) {\\n    useGSAP(() => {\\n        gsap.from(\\\".Heading\\\", {\\n            duration: 0.9,\\n            opacity: 0,\\n            y: 100,\\n        });\\n    });\\n    return (\\n        <>\\n            <div className=\\\"flex justify-around text-[#b8b4b0] w-full lg:mt-[20vh] sm:mt-[10vh] items-center\\\">\\n                <Line />\\n                <h2 className=\\\"Heading lg:text-4xl sm:text-3xl font-[Alegreya]\",\n            \" uppercase\\\">\\n                    {title}\\n                </h2>\\n                <Line />\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport default Title;\\n\"\n        ],\n        \"blog-app/src/components/ViewAll.jsx\": [\n            \"import React, { useContext, useEffect, useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport { InfinitySpin } from \\\"react-loader-spinner\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nfunction ViewAll() {\\n    const { user } = useContext(AuthContext);\\n    const [Data, setData] = useState([{}]);\\n    const [loading, setLoading] = useState(false);\\n\\n    async function fetchBlogs() {\\n        setLoading(true);\\n        try {\\n            co\",\n            \"nst response = await axios.get(`${backendURL}/${user._id}/blogs`);\\n            setData(response.data.Blogs);\\n        } catch (err) {\\n            console.log(\\\"Error in fetching blogs!\\\", err);\\n        } finally {\\n            setLoading(false);\\n        }\\n    }\\n\\n    useEffect(() => {\\n        fetchBlogs();\\n    }, []);\\n\\n    return (\\n        <>\\n            <div className=\\\"w-[100vw] min-h-screen lg:p-24 sm:p-5 sm:mb-20 text-[#b8b4b0]\\\">\\n                <h1 className=\\\"font-[Montserrat] text-2xl text-white\",\n            \" uppercase\\\">\\n                    All Blogs\\n                </h1>\\n                <hr className=\\\"mt-4 border-2 rounded\\\" />\\n                {loading ? (\\n                    <InfinitySpin\\n                        visible={true}\\n                        width=\\\"200\\\"\\n                        color=\\\"white\\\"\\n                        ariaLabel=\\\"infinity-spin-loading\\\"\\n                    />\\n                ) : (\\n                    <>\\n                        {Data.length === 0 && (\\n                            \",\n            \"<h1 className=\\\"text-center text-2xl mt-10 font-[Montserrat] whitespace-nowrap\\\">\\n                                 No blogs available\\n                            </h1>\\n                        )}\\n                        {Data.map((blog) => (\\n                            <div className=\\\"text-lg\\\" key={blog._id}>\\n                                <h2 className=\\\"mt-10\\\">\\n                                    <span className=\\\"font-bold uppercase text-white\\\">Title -</span>{\\\" \\\"}\\n                                \",\n            \"    {blog.Title}\\n                                </h2>\\n                                <p className=\\\"mt-4\\\">\\n                                    <span className=\\\"font-bold uppercase text-white\\\">\\n                                        Preview -\\n                                    </span>\\n                                    {blog.Preview}\\n                                </p>\\n                                <p className=\\\"mt-3\\\">\\n                                    <span className=\\\"font-bold uppercas\",\n            \"e text-white\\\">Date - </span>\\n                                    {blog.Date}\\n                                </p>\\n                                <hr className=\\\"mt-2 border-dashed\\\" />\\n                            </div>\\n                        ))}\\n                    </>\\n                )}\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport default ViewAll;\\n\"\n        ],\n        \"blog-app/src/context/AuthContext.jsx\": [\n            \"import { createContext, useState } from \\\"react\\\";\\n\\nconst AuthContext = createContext();\\n\\nexport const AuthProvider = ({ children }) => {\\n    const [user, setUser] = useState(null);\\n\\n    const login = (userData) => {\\n        setUser(userData);\\n    };\\n\\n    const logout = () => {\\n        setUser(null);\\n    };\\n\\n    return (\\n        <AuthContext.Provider value={{ user, login, logout }}>\\n            {children}\\n        </AuthContext.Provider>\\n    );\\n};\\n\\nexport default AuthContext;\\n\"\n        ],\n        \"blog-app/src/index.css\": [\n            \"@import \\\"tailwindcss/base\\\";\\n@import \\\"tailwindcss/components\\\";\\n@import \\\"tailwindcss/utilities\\\";\\n\\n@import url(\\\"https://fonts.googleapis.com/css2?family=Montserrat:wght@700&display=swap\\\");\\n/*Font family: Montserrat;*/\\n\\n@import url(\\\"https://fonts.googleapis.com/css2?family=Alegreya&display=swap\\\");\\n/*Font family: Alegreya;*/\\n\\n* {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/*Color Pallete \\n    #231e1d(BG-1)\\n    #02454F(BG-2)\\n    #b8b4b0(TEXT)\\n    #111117(Dark BG)\\n*/\\n\\n/* For WebKit browsers */\\n/* Track */\\n::-webkit\",\n            \"-scrollbar {\\n  width: 8px; /* width of the scrollbar */\\n}\\n\\n/* Handle */\\n::-webkit-scrollbar-thumb {\\n  background-color: #888; /* color of the scrollbar handle */\\n  border-radius: 4px; /* roundness of the scrollbar handle */\\n}\\n\\n/* Handle on hover */\\n::-webkit-scrollbar-thumb:hover {\\n  background-color: #555; /* color of the scrollbar handle on hover */\\n}\\n\\n/* Track */\\n::-webkit-scrollbar-track {\\n  background: #f1f1f1; /* color of the scrollbar track */\\n}\\n\\n/* Handle when scrolling */\\n::-webkit-scro\",\n            \"llbar-thumb:active {\\n  background-color: #000; /* color of the scrollbar handle when scrolling */\\n}\\n\"\n        ],\n        \"blog-app/src/main.jsx\": [\n            \"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom/client\\\";\\nimport \\\"./index.css\\\";\\nimport {\\n  Route,\\n  RouterProvider,\\n  createBrowserRouter,\\n  createRoutesFromElements,\\n} from \\\"react-router-dom\\\";\\n\\nimport { AuthProvider } from \\\"./context/AuthContext\\\";\\nimport Layout from \\\"./Layout\\\";\\nimport Home from \\\"./pages/Home\\\";\\nimport BlogPage from \\\"./pages/BlogPage\\\";\\nimport AdminLayout from \\\"./AdminLayout\\\";\\nimport ViewAll from \\\"./components/ViewAll\\\";\\nimport AddBlog from \\\"./components/AddBlog\\\";\\nimport \",\n            \"RemoveBlogs from \\\"./components/RemoveBlogs\\\";\\nimport EditBlog from \\\"./components/EditBlog\\\";\\nimport EditForm from \\\"./components/EditForm\\\";\\nimport EditBlogBase from \\\"./EditBlogBase\\\";\\nimport AuthPage from \\\"./pages/AuthPage\\\";\\nimport Profile from \\\"./pages/Profile\\\";\\nimport { Analytics } from \\\"@vercel/analytics/react\\\";\\nimport { Toaster } from \\\"react-hot-toast\\\";\\n\\nconst router = createBrowserRouter(\\n  createRoutesFromElements(\\n    <Route path=\\\"/\\\" element={<Layout />}>\\n      <Route path=\\\"\\\" element={<Home /\",\n            \">} />\\n      <Route path=\\\"/Auth\\\" element={<AuthPage />} />\\n      <Route path=\\\"/Profile\\\" element={<Profile />} />\\n      <Route path=\\\"Blog/:id\\\" element={<BlogPage />} />\\n      <Route path=\\\"Editor\\\" element={<AdminLayout />}>\\n        <Route path=\\\"ViewAll\\\" element={<ViewAll />} />\\n        <Route path=\\\"AddBlog\\\" element={<AddBlog />} />\\n        <Route path=\\\"RemoveBlog\\\" element={<RemoveBlogs />} />\\n        <Route path=\\\"EditBlog\\\" element={<EditBlogBase />}>\\n          <Route path=\\\"\\\" element={<EditBlog />} \",\n            \"/>\\n          <Route path=\\\"Edit/:id\\\" element={<EditForm />} />\\n        </Route>\\n      </Route>\\n    </Route>,\\n  ),\\n);\\n\\nReactDOM.createRoot(document.getElementById(\\\"root\\\")).render(\\n  <>\\n    <Toaster />\\n    <AuthProvider>\\n      <RouterProvider router={router} />\\n    </AuthProvider>\\n    <Analytics />\\n  </>,\\n);\\n\"\n        ],\n        \"blog-app/src/pages/AuthPage.jsx\": [\n            \"import { useState, useContext } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\nimport { useNavigate } from \\\"react-router-dom\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport toast from \\\"react-hot-toast\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nconst AuthPage = () => {\\n  const [isLogin, setIsLogin] = useState(true);\\n\\n  return (\\n    <div className=\\\"min-h-screen flex items-center justify-center bg-[#231e1d]\\\">\\n      <div className=\\\"bg-transparent lg:p-8 sm:p-4 rounded-lg shadow-lg\",\n            \" lg:w-96 sm:w-80 border-2 border-[#b8b4b0]\\\">\\n        <h2 className=\\\"text-2xl font-bold mb-6 text-center text-[#b8b4b0]\\\">\\n          {isLogin ? \\\"Login\\\" : \\\"Register\\\"}\\n        </h2>\\n        {isLogin ? <LoginForm /> : <RegisterForm />}\\n        <div className=\\\"text-center mt-4\\\">\\n          <button\\n            onClick={() => setIsLogin(!isLogin)}\\n            className=\\\"text-blue-500 hover:underline\\\"\\n          >\\n            {isLogin\\n              ? \\\"New Here? Create an Account\\\"\\n              : \\\"Have an A\",\n            \"ccount?, Login instead\\\"}\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  );\\n};\\n\\nconst LoginForm = () => {\\n  const navigateTo = useNavigate();\\n  const { login } = useContext(AuthContext);\\n\\n  const [username, setusername] = useState(\\\"\\\");\\n  const [password, setpassword] = useState(\\\"\\\");\\n\\n  const handleLogin = async (e) => {\\n    e.preventDefault();\\n    try {\\n      const response = await axios.post(`${backendURL}/login`, {\\n        username,\\n        password,\\n      });\\n      if (response.s\",\n            \"tatus == 200) {\\n        login(response.data);\\n        navigateTo(\\\"/\\\");\\n      }\\n    } catch (error) {\\n      toast.error(\\\"Username or Password maybe incorrect, try again\\\");\\n      console.error(\\\"Login failed\\\", error);\\n    }\\n  };\\n\\n  return (\\n    <form className=\\\"space-y-4\\\" onSubmit={handleLogin}>\\n      <div>\\n        <label className=\\\"block text-[#b8b4b0]\\\">Username</label>\\n        <input\\n          type=\\\"text\\\"\\n          className=\\\"w-full bg-transparent p-2 text-[#b8b4b0] border border-gray-300 rounded\",\n            \" mt-1\\\"\\n          required\\n          value={username}\\n          onChange={(e) => setusername(e.target.value)}\\n        />\\n      </div>\\n      <div>\\n        <label className=\\\"block text-[#b8b4b0]\\\">Password</label>\\n        <input\\n          type=\\\"password\\\"\\n          className=\\\"w-full p-2 border border-gray-300 bg-transparent text-[#b8b4b0] rounded mt-1\\\"\\n          required\\n          value={password}\\n          onChange={(e) => setpassword(e.target.value)}\\n        />\\n      </div>\\n      <button\\n        ty\",\n            \"pe=\\\"submit\\\"\\n        className=\\\"w-full bg-blue-500 text-white p-2 rounded mt-4 hover:bg-blue-600\\\"\\n      >\\n        Login\\n      </button>\\n    </form>\\n  );\\n};\\n\\nconst RegisterForm = () => {\\n  const navigateTo = useNavigate();\\n  const { login } = useContext(AuthContext);\\n\\n  const [username, setusername] = useState(\\\"\\\");\\n  const [password, setpassword] = useState(\\\"\\\");\\n  const handleRegister = async (e) => {\\n    e.preventDefault();\\n    setusername(\\\"\\\");\\n    setpassword(\\\"\\\");\\n    try {\\n      const response \",\n            \"= await axios.post(`${backendURL}/register`, {\\n        username,\\n        password,\\n      });\\n\\n      if (response.status === 200) {\\n        login(response.data);\\n        navigateTo(\\\"/\\\");\\n      } else if (response.status === 201) {\\n        toast.error(\\\"Username already exists, please login instead\\\");\\n      }\\n    } catch (error) {\\n      toast.error(\\\"Registration failed, Please try again later\\\");\\n      console.error(\\\"Registration failed\\\", error);\\n    }\\n  };\\n  return (\\n    <form className=\\\"space-y-4\\\"\",\n            \" onSubmit={handleRegister}>\\n      <div>\\n        <label className=\\\"block text-[#b8b4b0]\\\">Username</label>\\n        <input\\n          type=\\\"text\\\"\\n          className=\\\"w-full p-2 border border-gray-300 bg-transparent text-[#b8b4b0] rounded mt-1\\\"\\n          required\\n          value={username}\\n          onChange={(e) => setusername(e.target.value)}\\n        />\\n      </div>\\n      <div>\\n        <label className=\\\"block text-[#b8b4b0]\\\">Password</label>\\n        <input\\n          type=\\\"password\\\"\\n          class\",\n            \"Name=\\\"w-full p-2 border border-gray-300 rounded mt-1 bg-transparent text-[#b8b4b0]\\\"\\n          required\\n          value={password}\\n          onChange={(e) => setpassword(e.target.value)}\\n        />\\n      </div>\\n      <button\\n        type=\\\"submit\\\"\\n        className=\\\"w-full bg-blue-500 text-white p-2 rounded mt-4 hover:bg-blue-600\\\"\\n      >\\n        Register\\n      </button>\\n    </form>\\n  );\\n};\\n\\nexport default AuthPage;\\n\"\n        ],\n        \"blog-app/src/pages/BlogPage.jsx\": [\n            \"import axios from \\\"axios\\\";\\nimport { useEffect, useState } from \\\"react\\\";\\nimport { useParams } from \\\"react-router-dom\\\";\\nimport Title from \\\"../components/Title\\\";\\nimport BlogContent from \\\"../components/BlogContent\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nfunction BlogPage() {\\n    const [blog, setblog] = useState({});\\n    const { id } = useParams();\\n\\n    async function fetchBlog() {\\n        const response = await axios.get(`${backendURL}/Blog/${id}`);\\n        setblog(response.data);\\n \",\n            \"   }\\n    useEffect(() => {\\n        fetchBlog();\\n    }, []);\\n\\n    return (\\n        <div className=\\\"min-h-screen bg-[#231e1d] text-[#b8b4b0]  w-full flex flex-col font-[Alegreya]\\\">\\n            <Title title=\\\"Dev Diary\\\" />\\n            <div className=\\\"Content lg:w-full sm:w-[100vw] flex lg:justify-center sm:px-5 lg:pt-10 sm:pt-5\\\">\\n                <BlogContent content={blog} />\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default BlogPage;\\n\"\n        ],\n        \"blog-app/src/pages/Home.jsx\": [\n            \"import { useContext, useEffect, useState } from \\\"react\\\";\\nimport Title from \\\"../components/Title\\\";\\nimport BlogList from \\\"../components/BlogList\\\";\\nimport axios from \\\"axios\\\";\\nimport Auth from \\\"../components/Auth\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\nimport { InfinitySpin } from \\\"react-loader-spinner\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nfunction Home() {\\n    const [Data, setData] = useState([{}]);\\n\\n    const { user } = useCon\",\n            \"text(AuthContext);\\n\\n    const [loading, setLoading] = useState(false);\\n    useEffect(() => {\\n        async function fetchBlogs() {\\n            setLoading(true);\\n            try {\\n                const response = await axios.get(`${backendURL}/blogs`, {\\n                    withCredentials: true,\\n                });\\n                setData(response.data);\\n            } catch (err) {\\n                console.log(\\\"Error fetching blogs\\\", err);\\n            } finally {\\n                setLoading(false);\",\n            \"\\n            }\\n        }\\n        fetchBlogs();\\n    }, []);\\n\\n    return (\\n        <>\\n            <div className=\\\"min-h-screen bg-[#231e1d] text-[#b8b4b0]  w-full flex flex-col font-[Alegreya]\\\">\\n                <Title title=\\\"Dev Diary\\\" />\\n                <div className=\\\"Content w-full flex lg:flex-row sm:flex-col lg:justify-around sm:justify-normal lg:p-20 sm:p-5\\\">\\n                    {loading ? (\\n                        <InfinitySpin\\n                            visible={true}\\n                    \",\n            \"        width=\\\"200\\\"\\n                            color=\\\"white\\\"\\n                            ariaLabel=\\\"infinity-spin-loading\\\"\\n                        />\\n                    ) : (\\n                        <BlogList BlogsData={Data} />\\n                    )}\\n                    <div className=\\\"Content flex flex-col \\\">\\n                        {/* <About /> */}\\n                        {user ? (\\n                            <div className=\\\"flex gap-4 mt-10\\\">\\n                                <div className\",\n            \"=\\\"border-2 border-white rounded-md w-fit p-4\\\">\\n                                    <Link to={\\\"/Profile\\\"}>Profile</Link>\\n                                </div>\\n                                <div className=\\\"border-2 border-white rounded-md w-fit p-4\\\">\\n                                    <Link to=\\\"/Editor/ViewAll\\\">Manage Blogs</Link>\\n                                </div>\\n                            </div>\\n                        ) : (\\n                            <Auth />\\n                        \",\n            \")}\\n                    </div>\\n                </div>\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport default Home;\\n\"\n        ],\n        \"blog-app/src/pages/Profile.jsx\": [\n            \"import { useContext, useEffect, useState } from \\\"react\\\";\\nimport Title from \\\"../components/Title\\\";\\nimport BlogList from \\\"../components/BlogList\\\";\\nimport axios from \\\"axios\\\";\\nimport Auth from \\\"../components/Auth\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\nimport { useNavigate } from \\\"react-router-dom\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nexport default function Profile() {\\n    const navigate = useNavigate();\\n    const { user } = us\",\n            \"eContext(AuthContext);\\n    const [Data, setData] = useState([{}]);\\n\\n    async function fetchBlogs() {\\n        if (!user) navigate(\\\"/\\\");\\n        const response = await axios.get(`${backendURL}/${user._id}/blogs`);\\n        setData(response.data.Blogs);\\n    }\\n    useEffect(() => {\\n        fetchBlogs();\\n    }, []);\\n    return (\\n        <>\\n            <div>\\n                <div className=\\\"min-h-screen bg-[#231e1d] text-[#b8b4b0] w-full flex flex-col font-[Alegreya]\\\">\\n                    <Title title=\",\n            \"{`Your Blogs`} />\\n                <div className=\\\"w-full flex lg:flex-row sm:flex-col lg:justify-around sm:justify-normal lg:p-20 sm:p-5\\\">\\n                        <BlogList BlogsData={Data} />\\n                        {user ? (\\n                            <div className=\\\"flex gap-4 mt-10 w-fit h-fit\\\">\\n                                <button className=\\\"border-2 border-white rounded-md w-fit p-4\\\">\\n                                    <Link to={\\\"/\\\"}>All Blogs</Link>\\n                                </\",\n            \"button>\\n                                <button className=\\\"border-2 border-white rounded-md w-fit p-4\\\">\\n                                    <Link to=\\\"/Editor/ViewAll\\\">Manage Blogs</Link>\\n                                </button>\\n                            </div>\\n                        ) : (\\n                            <Auth />\\n                        )}\\n                    </div>\\n                </div>\\n            </div>\\n        </>\\n    );\\n}\\n\"\n        ],\n        \"blog-app/src/utils/editorTools.js\": [\n            \"import Header from \\\"@editorjs/header\\\";\\nimport Paragraph from \\\"@editorjs/paragraph\\\";\\nimport Table from \\\"@editorjs/table\\\";\\nimport Delimiter from \\\"@editorjs/delimiter\\\";\\nimport Code from \\\"@editorjs/code\\\";\\n\\nexport const EDITOR_JS_TOOLS = {\\n    header: {\\n        class: Header,\\n        config: {\\n            levels: [1, 2, 3, 4],\\n            defaultLevel: 2,\\n        },\\n    },\\n    paragraph: {\\n        class: Paragraph,\\n    },\\n    table: {\\n        class: Table,\\n        config: {\\n            rows: 2,\\n     \",\n            \"       cols: 3,\\n        },\\n    },\\n    delimiter: Delimiter, // A simple horizontal line\\n    code: Code, // Code block\\n};\\n\"\n        ],\n        \"blog-app/tailwind.config.js\": [\n            \"/** @type {import('tailwindcss').Config} */\\nexport default {\\n    content: [\\\"./index.html\\\", \\\"./src/**/*.{js,jsx}\\\"],\\n    theme: {\\n        screens: {\\n            sm: \\\"380px\\\",\\n            md: \\\"768px\\\",\\n            lg: \\\"768px\\\",\\n            xl: \\\"1440px\\\",\\n        },\\n        extend: {},\\n    },\\n    plugins: [],\\n};\\n\"\n        ],\n        \"blog-app/vite.config.js\": [\n            \"import { defineConfig } from 'vite'\\nimport react from '@vitejs/plugin-react'\\n\\n// https://vitejs.dev/config/\\nexport default defineConfig({\\n  plugins: [react()],\\n})\\n\"\n        ]\n    },\n    \"message\": \"Repo processed successfully\"\n}"),
			},
		},
		{
			Role: "model",
			Parts: []genai.Part{
				genai.Text("```markdown\nRoute: GET /\nResponse: ```json\n{\n    \"status\": 200,\n    \"message\": \"Backend Working succesfully!!\"\n}\n```\nSummary:  A basic endpoint to check if the backend server is running.\n\n---\nRoute: POST /login\nResponse: ```json\n{\n  \"status\": 200,\n    \"Username\": \"user_name\",\n    \"_id\": \"user_id\"\n}\n```\nSummary:  Authenticates a user based on provided username and password, returning user details on successful login. Redirects to /Auth on failure.\n\n---\nRoute: POST /register\nResponse: ```json\n{\n    \"status\": 200,\n    \"Username\": \"user_name\"\n}\n```\nor\n```json\n{\n  \"status\": 201,\n  \"message\": \"Username already taken\",\n  \"Username\": \"existing_user_name\"\n}\n```\nSummary: Registers a new user with the given username and password. Returns the registered username or message if the username already exists.\n\n---\nRoute: GET /blogs\nResponse: ```json\n[\n    {\n        \"_id\": \"blog_id\",\n        \"Title\": \"Blog Title\",\n        \"Content\": {\n          \"time\": 123456789,\n          \"blocks\": []\n        },\n        \"Preview\": \"Blog Preview\",\n        \"Date\": \"date string\",\n        \"User\": {\n          \"_id\": \"user_id\",\n          \"Username\": \"user_name\",\n          \"Password\": \"hashed_password\",\n          \"Blogs\": [\"blog_id\"]\n        }\n    }\n]\n```\nor\n```json\n{\n  \"status\": 304,\n  \"message\": \"Couldn't fetch any data\"\n}\n```\nor\n```json\n{\n  \"status\": 500,\n  \"message\": \"Internal Server Error\"\n}\n```\nSummary: Fetches and returns a list of all blog posts with user details, returns 304 if data not available and 500 for internal server error.\n\n---\nRoute: GET /:id/blogs\nResponse: ```json\n{\n    \"Blogs\": [\n        {\n            \"_id\": \"blog_id\",\n            \"Title\": \"Blog Title\",\n            \"Content\": {\n              \"time\": 123456789,\n              \"blocks\": []\n            },\n            \"Preview\": \"Blog Preview\",\n            \"Date\": \"date string\",\n            \"User\": \"user_id\"\n        }\n    ]\n}\n```\nSummary: Retrieves all blog posts associated with a specific user ID.\n\n---\nRoute: GET /Blog/:id\nResponse: ```json\n{\n    \"_id\": \"blog_id\",\n    \"Title\": \"Blog Title\",\n    \"Content\": {\n      \"time\": 123456789,\n      \"blocks\": []\n    },\n    \"Preview\": \"Blog Preview\",\n    \"Date\": \"date string\",\n    \"User\": \"user_id\"\n}\n```\nSummary: Fetches a specific blog post by its ID.\n\n---\nRoute: GET /EditBlog/:id\nResponse: ```json\n{\n    \"_id\": \"blog_id\",\n    \"Title\": \"Blog Title\",\n    \"Content\": {\n       \"time\": 123456789,\n       \"blocks\": []\n      },\n    \"Preview\": \"Blog Preview\",\n    \"Date\": \"date string\",\n    \"User\": \"user_id\"\n}\n```\nSummary: Fetches a specific blog post by its ID for editing.\n\n---\nRoute: POST /:id/AddBlog\nResponse: ```json\n{\n    \"status\": 201,\n    \"message\": \"Blog created successfully\",\n    \"blog\": {\n        \"_id\": \"blog_id\",\n        \"Title\": \"Blog Title\",\n        \"Content\": {\n          \"time\": 123456789,\n          \"blocks\": []\n        },\n        \"Preview\": \"Blog Preview\",\n        \"Date\": \"date string\",\n        \"User\": \"user_id\"\n    }\n}\n```\nor\n```json\n{\n  \"status\": 500,\n  \"message\": \"Error creating blog\"\n}\n```\nSummary: Creates a new blog post associated with a user, returns 201 on success and 500 for error creating the blog.\n\n---\nRoute: POST /Edit/:id\nResponse: ```json\n{\n    \"status\": 200,\n    \"message\": \"Updated Successfully\"\n}\n```\nor\n```json\n{\n  \"status\": 500,\n  \"message\": \"Internal Server Error\"\n}\n```\nSummary: Updates an existing blog post with the provided ID. Returns 200 on success and 500 for internal error.\n\n---\nRoute: DELETE /Editor/RemoveBlog/:id\nResponse: ```json\n{\n    \"status\": 200,\n    \"message\": \"Blog Deleted Successfully\"\n}\n```\nor\n```json\n{\n  \"status\": 404,\n  \"message\": \"Blog not found\"\n}\n```\nor\n```json\n{\n  \"status\": 500,\n  \"message\": \"Internal Server error\"\n}\n```\nSummary: Deletes a specific blog post by its ID. Returns 200 on success, 404 if not found and 500 if internal server error.\n```\n"),
			},
		},
		{
			Role: "user",
			Parts: []genai.Part{
				genai.Text("try better formatting this for the next one"),
			},
		},
		{
			Role: "model",
			Parts: []genai.Part{
				genai.Text("Okay, I understand. I will focus on improving the formatting for the next documentation output. I'll aim for better readability by using more consistent spacing, line breaks, and clear separation of elements within the Markdown structure. I'll also pay closer attention to how the JSON responses are displayed to make them more digestible. \n\nI'm ready for the next input! Let's see what we have.\n"),
			},
		},
		{
			Role: "user",
			Parts: []genai.Part{
				genai.Text("{\n    \"data\": {\n        \"Backend/index.js\": [\n            \"const express = require(\\\"express\\\");\\nconst cors = require(\\\"cors\\\");\\nrequire(\\\"dotenv\\\").config();\\nconst LocalStrategy = require(\\\"passport-local\\\").Strategy;\\nconst passport = require(\\\"passport\\\");\\nconst session = require(\\\"express-session\\\");\\nconst MemoryStore = require(\\\"memorystore\\\")(session);\\n\\nconst app = express();\\nconst PORT = 5000;\\n\\nconst BlogModel = require(\\\"./models/Blog\\\");\\nconst UserModel = require(\\\"./models/Users\\\");\\n\\n//Cors:\\n// app.use(cors());\\napp.use(\\n    cors({\\n        origin: process.env.PRO\",\n            \"D_URL,\\n        methods: \\\"GET,HEAD,PUT,PATCH,POST,DELETE\\\",\\n        allowedHeaders: [\\\"Content-Type\\\", \\\"Authorization\\\"],\\n        credentials: true,\\n    }),\\n);\\n\\npassport.use(\\n    new LocalStrategy(async function(username, password, done) {\\n        try {\\n            const user = await UserModel.findOne({ Username: username });\\n\\n            if (!user) {\\n                return done(null, false, { message: \\\"Incorrect username.\\\" });\\n            }\\n\\n            if (user.Password !== password) {\\n            \",\n            \"    return done(null, false, { message: \\\"Incorrect password.\\\" });\\n            }\\n\\n            return done(null, user);\\n        } catch (err) {\\n            return done(err);\\n        }\\n    }),\\n);\\n\\npassport.serializeUser((user, done) => {\\n    done(null, user.id);\\n});\\n\\npassport.deserializeUser(async (id, done) => {\\n    try {\\n        const user = await UserModel.findById(id);\\n        done(null, user);\\n    } catch (err) {\\n        done(err);\\n    }\\n});\\n\\napp.use(express.json());\\napp.use(express.urlencoded\",\n            \"({ extended: false }));\\n\\napp.use(\\n    session({\\n        cookie: { maxAge: 86400000 },\\n        store: new MemoryStore({\\n            checkPeriod: 86400000, // prune expired entries every 24h\\n        }),\\n        resave: false,\\n        secret: \\\"jai Shree Ram\\\",\\n        saveUninitialized: false,\\n    }),\\n);\\napp.use(passport.initialize());\\napp.use(passport.session());\\n\\napp.get(\\\"/\\\", (req, res) => {\\n    res.send(\\\"Backend Working succesfully!!\\\");\\n});\\n\\n//Authentication:\\n\\napp.post(\\n    \\\"/login\\\",\\n    passport\",\n            \".authenticate(\\\"local\\\", {\\n        failureRedirect: `${process.env.PROD_URL}/Auth`,\\n    }),\\n    function(req, res) {\\n        const { _id, Username } = req.user;\\n        res.status(200).json({ Username, _id });\\n    },\\n);\\n\\napp.post(\\\"/register\\\", async (req, res) => {\\n    const existingUser = await UserModel.findOne({ Username: req.body.username });\\n\\n    if (existingUser) {\\n        return res\\n            .status(201)\\n            .json({ message: \\\"Username already taken\\\", Username: existingUser });\\n   \",\n            \" }\\n    const newUser = new UserModel({\\n        Username: req.body.username,\\n        Password: req.body.password,\\n    });\\n\\n    await newUser.save();\\n    res.status(200).json({ Username: req.body.username });\\n});\\n\\n//APIs:\\napp.get(\\\"/blogs\\\", async (req, res) => {\\n    try {\\n        const Blogs = await BlogModel.find().populate(\\\"User\\\");\\n        if (!Blogs || Blogs.length === 0) {\\n            return res.status(304).send(\\\"Couldn't fetch any data\\\");\\n        }\\n        res.status(200).json(Blogs);\\n    } ca\",\n            \"tch (error) {\\n        console.error(\\\"Error fetching blogs:\\\", error);\\n        res.status(500).send(\\\"Internal Server Error\\\");\\n    }\\n});\\n\\n//Editor/ViewAll\\napp.get(\\\"/:id/blogs\\\", async (req, res) => {\\n    const Id = req.params.id;\\n    const User = await UserModel.findById(Id).populate(\\\"Blogs\\\");\\n\\n    res.json({ Blogs: User.Blogs });\\n});\\n\\n//Home\\napp.get(\\\"/Blog/:id\\\", async (req, res) => {\\n    const id = req.params.id;\\n    const Blog = await BlogModel.findById(id);\\n    res.json(Blog).status(200);\\n});\\n\\nap\",\n            \"p.get(\\\"EditBlog/:id\\\", async (req, res) => {\\n    const id = req.params.id;\\n    const Blog = await BlogModel.findById(id);\\n    res.json(Blog).status(200);\\n});\\n\\n//POST Requests:\\napp.post(\\\"/:id/AddBlog\\\", async (req, res) => {\\n    try {\\n        const UserId = req.params.id;\\n\\n        const newBlog = new BlogModel({\\n            Title: req.body.title,\\n            Content: req.body.content,\\n            Preview: req.body.preview,\\n            Date: Date.now(),\\n            User: UserId,\\n        });\\n\\n       \",\n            \" const savedBlog = await newBlog.save(); // Save the new blog\\n\\n        await UserModel.findByIdAndUpdate(UserId, {\\n            $push: { Blogs: savedBlog._id },\\n        });\\n        res\\n            .status(201)\\n            .json({ message: \\\"Blog created successfully\\\", blog: newBlog });\\n    } catch (error) {\\n        console.error(\\\"Error creating blog:\\\", error);\\n        res.status(500).json({ message: \\\"Error creating blog\\\" });\\n    }\\n});\\n\\napp.post(\\\"/Edit/:id\\\", async (req, res) => {\\n    const { id } =\",\n            \" req.params;\\n    const { title, content, preview } = req.body;\\n    try {\\n        await BlogModel.findByIdAndUpdate(\\n            id,\\n            { Title: title, Content: content, Preview: preview },\\n            { new: true },\\n        );\\n        res.status(200).json({ message: \\\"Updated Successfully\\\" });\\n    } catch (error) {\\n        console.error(\\\"Error Updating the Blog\\\", error);\\n        res.status(500).json({ message: \\\"Internal Server Error\\\" });\\n    }\\n});\\n\\napp.delete(\\\"/Editor/RemoveBlog/:id\\\", as\",\n            \"ync (req, res) => {\\n    const { id } = req.params;\\n    try {\\n        const DeleteBlog = await BlogModel.findByIdAndDelete(id);\\n        res.status(200).json({ message: \\\"Blog Deleted Successfully\\\" });\\n\\n        if (!DeleteBlog) {\\n            return res.status(404).json({ message: \\\"Blog not found\\\" });\\n        }\\n    } catch (error) {\\n        console.error(\\\"Error deleting the blog\\\", error);\\n        res.status(500).json({ message: \\\"Internal Server error\\\" });\\n    }\\n});\\n\\napp.listen(PORT, () => {\\n    cons\",\n            \"ole.log(`Server is Listening on http://localhost:${PORT}`);\\n});\\n\"\n        ],\n        \"Backend/models/Blog.js\": [\n            \"const mongoose = require(\\\"mongoose\\\");\\nmongoose.connect(process.env.MONGO_URI);\\n\\nconst BlogSchema = mongoose.Schema({\\n    Title: {\\n        type: String,\\n        required: true,\\n    },\\n    Content: {\\n        type: Object,\\n        required: true,\\n    },\\n    Preview: {\\n        type: String,\\n    },\\n    Date: {\\n        type: Date,\\n    },\\n    User: {\\n        type: mongoose.Schema.Types.ObjectId,\\n        ref: \\\"Users\\\",\\n    },\\n});\\n\\nmodule.exports = mongoose.model(\\\"Blogs\\\", BlogSchema);\\n\"\n        ],\n        \"Backend/models/Users.js\": [\n            \"const mongoose = require(\\\"mongoose\\\");\\n\\nconst UserSchema = new mongoose.Schema({\\n    Username: {\\n        type: String,\\n    },\\n    Password: {\\n        type: String,\\n    },\\n    Blogs: [\\n        {\\n            type: mongoose.Schema.Types.ObjectId,\\n            ref: \\\"Blogs\\\",\\n        },\\n    ],\\n});\\n\\nmodule.exports = mongoose.model(\\\"Users\\\", UserSchema);\\n\"\n        ],\n        \"Backend/package.json\": [\n            \"{\\n  \\\"name\\\": \\\"backend\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"main\\\": \\\"index.js\\\",\\n  \\\"scripts\\\": {\\n    \\\"test\\\": \\\"echo \\\\\\\"Error: no test specified\\\\\\\" && exit 1\\\",\\n    \\\"start\\\": \\\"nodemon index.js\\\",\\n    \\\"dev\\\": \\\"nodemon index.js\\\"\\n  },\\n  \\\"author\\\": \\\"\\\",\\n  \\\"license\\\": \\\"ISC\\\",\\n  \\\"dependencies\\\": {\\n    \\\"cors\\\": \\\"^2.8.5\\\",\\n    \\\"dotenv\\\": \\\"^16.4.1\\\",\\n    \\\"express\\\": \\\"^4.18.2\\\",\\n    \\\"express-session\\\": \\\"^1.18.0\\\",\\n    \\\"memorystore\\\": \\\"^1.6.7\\\",\\n    \\\"moment\\\": \\\"^2.30.1\\\",\\n    \\\"mongoose\\\": \\\"^8.1.1\\\",\\n    \\\"passport\\\": \\\"^0.7.0\\\",\\n \",\n            \"   \\\"passport-local\\\": \\\"^1.0.0\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"nodemon\\\": \\\"^3.1.4\\\"\\n  }\\n}\\n\"\n        ],\n        \"Backend/vercel.json\": [\n            \"{ \\\"version\\\": 2,\\n  \\\"builds\\\": [\\n    {\\n      \\\"src\\\": \\\"*.js\\\",\\n      \\\"use\\\": \\\"@vercel/node\\\"\\n    }\\n  ],\\n  \\\"routes\\\": [\\n    {\\n      \\\"src\\\": \\\"/(.*)\\\",\\n      \\\"dest\\\": \\\"/\\\"\\n    }\\n  ]\\n}\\n\"\n        ],\n        \"blog-app/index.html\": [\n            \"<!doctype html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <link rel=\\\"icon\\\" type=\\\"image/svg+xml\\\" href=\\\"/blog.svg\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\\n    <title>Blog App</title>\\n  </head>\\n  <body>\\n    <div id=\\\"root\\\"></div>\\n    <script type=\\\"module\\\" src=\\\"/src/main.jsx\\\"></script>\\n  </body>\\n</html>\\n\"\n        ],\n        \"blog-app/package.json\": [\n            \"{\\n  \\\"name\\\": \\\"blog-app\\\",\\n  \\\"private\\\": true,\\n  \\\"version\\\": \\\"0.0.0\\\",\\n  \\\"type\\\": \\\"module\\\",\\n  \\\"scripts\\\": {\\n    \\\"dev\\\": \\\"vite\\\",\\n    \\\"build\\\": \\\"vite build\\\",\\n    \\\"lint\\\": \\\"eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0\\\",\\n    \\\"preview\\\": \\\"vite preview\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"@editorjs/checklist\\\": \\\"^1.6.0\\\",\\n    \\\"@editorjs/code\\\": \\\"^2.9.3\\\",\\n    \\\"@editorjs/delimiter\\\": \\\"^1.4.2\\\",\\n    \\\"@editorjs/editorjs\\\": \\\"^2.30.7\\\",\\n    \\\"@editorjs/embed\\\": \\\"^2.7.6\\\",\\n    \\\"@editorjs/header\\\": \\\"^2.8.8\\\",\\n\",\n            \"    \\\"@editorjs/image\\\": \\\"^2.10.1\\\",\\n    \\\"@editorjs/inline-code\\\": \\\"^1.5.1\\\",\\n    \\\"@editorjs/link\\\": \\\"^2.6.2\\\",\\n    \\\"@editorjs/list\\\": \\\"^2.0.3\\\",\\n    \\\"@editorjs/marker\\\": \\\"^1.4.0\\\",\\n    \\\"@editorjs/paragraph\\\": \\\"^2.11.7\\\",\\n    \\\"@editorjs/quote\\\": \\\"^2.7.6\\\",\\n    \\\"@editorjs/raw\\\": \\\"^2.5.1\\\",\\n    \\\"@editorjs/table\\\": \\\"^2.4.3\\\",\\n    \\\"@editorjs/warning\\\": \\\"^1.4.1\\\",\\n    \\\"@gsap/react\\\": \\\"^2.1.2\\\",\\n    \\\"@vercel/analytics\\\": \\\"^1.4.1\\\",\\n    \\\"axios\\\": \\\"^1.7.9\\\",\\n    \\\"gsap\\\": \\\"^3.12.7\\\",\\n    \\\"react\\\": \\\"^19.0.0\\\",\\n    \\\"react-dom\\\": \\\"^19.0.0\",\n            \"\\\",\\n    \\\"react-editor-js\\\": \\\"^2.1.0\\\",\\n    \\\"react-hot-toast\\\": \\\"^2.5.1\\\",\\n    \\\"react-icons\\\": \\\"^5.4.0\\\",\\n    \\\"react-loader-spinner\\\": \\\"^6.1.6\\\",\\n    \\\"react-markdown\\\": \\\"^9.0.3\\\",\\n    \\\"react-router-dom\\\": \\\"^7.1.3\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"@types/react\\\": \\\"^19.0.7\\\",\\n    \\\"@types/react-dom\\\": \\\"^19.0.3\\\",\\n    \\\"@vitejs/plugin-react\\\": \\\"^4.3.4\\\",\\n    \\\"autoprefixer\\\": \\\"^10.4.20\\\",\\n    \\\"postcss\\\": \\\"^8.5.1\\\",\\n    \\\"tailwindcss\\\": \\\"^3.4.17\\\",\\n    \\\"vite\\\": \\\"^6.0.11\\\"\\n  }\\n}\\n\"\n        ],\n        \"blog-app/postcss.config.js\": [\n            \"export default {\\n  plugins: {\\n    tailwindcss: {},\\n    autoprefixer: {},\\n  },\\n}\\n\"\n        ],\n        \"blog-app/src/AdminLayout.jsx\": [\n            \"import { Outlet, useNavigate } from \\\"react-router-dom\\\";\\nimport MobilePanel from \\\"./components/MobilePanel\\\";\\nimport { useContext, useEffect } from \\\"react\\\";\\nimport AuthContext from \\\"./context/AuthContext\\\";\\nfunction Admin() {\\n  const { user } = useContext(AuthContext);\\n  const navigate = useNavigate();\\n  useEffect(() => {\\n    if (!user) navigate(\\\"/\\\");\\n  });\\n  return (\\n    <>\\n      <div className=\\\"w-full min-h-screen bg-[#231e1d] flex\\\">\\n        <div className=\\\"sm:block flex flex-col\\\">\\n          <Out\",\n            \"let />\\n          <MobilePanel />\\n        </div>\\n      </div>\\n    </>\\n  );\\n}\\n\\nexport default Admin;\\n\"\n        ],\n        \"blog-app/src/EditBlogBase.jsx\": [\n            \"import React from \\\"react\\\";\\nimport { Outlet } from \\\"react-router-dom\\\";\\n\\nfunction EditBlogBase() {\\n  return (\\n    <>\\n      <Outlet />\\n    </>\\n  );\\n}\\n\\nexport default EditBlogBase;\\n\"\n        ],\n        \"blog-app/src/Layout.jsx\": [\n            \"import React, { useEffect } from \\\"react\\\";\\nimport { Outlet, useLocation } from \\\"react-router-dom\\\";\\nimport Footer from \\\"./components/Footer\\\";\\n\\nfunction Layout() {\\n  const { pathname } = useLocation();\\n\\n  useEffect(() => {\\n    // Scroll to the top of the page whenever the route changes\\n    window.scrollTo(0, 0);\\n  }, [pathname]);\\n\\n  return (\\n    <>\\n      <Outlet />\\n      <Footer />\\n    </>\\n  );\\n}\\n\\nexport default Layout;\\n\"\n        ],\n        \"blog-app/src/components/About.jsx\": [\n            \"function About() {\\n  return (\\n    <div>\\n      <h2 className=\\\"uppercase mb-5 text-xl\\\">About me</h2>\\n      <p>\\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit enim nam\\n        voluptatibus perferendis explicabo mollitia possimus cupiditate,\\n        pariatur dicta odio harum error vitae voluptas ab sint consequuntur.\\n        Suscipit numquam aliquam, aliquid\\n      </p>\\n    </div>\\n  );\\n}\\n\\nexport default About;\\n\"\n        ],\n        \"blog-app/src/components/AddBlog.jsx\": [\n            \"import { useContext, useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport EditorComponent from \\\"./Editor\\\";\\nimport toast from \\\"react-hot-toast\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\n// const INITIAL_DATA = {\\n//     time: new Date().getTime(),\\n//     blocks: [\\n//         {\\n//             type: \\\"header\\\",\\n//             data: {\\n//                 text: \\\"This is my awesome editor!\\\",\\n//                 level: 2,\\n//             }\",\n            \",\\n//         },\\n//     ],\\n// };\\n\\nfunction AddBlog() {\\n  const { user } = useContext(AuthContext);\\n\\n  const [title, settitle] = useState(\\\"\\\");\\n  const [content, setContent] = useState({});\\n  const [preview, setpreview] = useState(\\\"\\\");\\n  const [date, setdate] = useState(\\\"\\\");\\n\\n  const handleSubmit = async (e) => {\\n    e.preventDefault();\\n    settitle(\\\"\\\");\\n    setContent({});\\n    setpreview(\\\"\\\");\\n\\n    try {\\n      await axios.post(`${backendURL}/${user._id}/AddBlog`, {\\n        title,\\n        content,\\n \",\n            \"       preview,\\n        date,\\n      });\\n\\n      toast.success(\\\"Blog Submitted Successfully!!\\\");\\n      // console.log(\\\"Response:\\\", response.data);\\n    } catch (error) {\\n      toast.error(\\\"Something went wrong, Please try again later\\\");\\n      console.error(\\\"Error saving the blog\\\", error);\\n    }\\n  };\\n\\n  return (\\n    <>\\n      <div className=\\\"w-[100vw] min-h-screen lg:p-24 sm:p-5 sm:mb-20 text-[#b8b4b0]\\\">\\n        <h1 className=\\\"font-[Montserrat] text-2xl text-white uppercase\\\">\\n          Add Blog\\n     \",\n            \"   </h1>\\n        <hr className=\\\"mt-4 border-2 rounded\\\" />\\n        <div className=\\\"mt-10 w-full\\\">\\n          <form className=\\\"space-y-4  sm:w-[90vw]\\\" onSubmit={handleSubmit}>\\n            <div className=\\\"relative\\\">\\n              <label\\n                htmlFor=\\\"Title\\\"\\n                className=\\\"absolute text-lg top-0 left-0 -mt-3 ml-4 bg-[#231e1d] text-white font-[Montserrat] ]\\\"\\n              >\\n                Title\\n              </label>\\n              <input\\n                type=\\\"text\\\"\\n            \",\n            \"    name=\\\"Title\\\"\\n                value={title}\\n                onChange={(e) => settitle(e.target.value)}\\n                className=\\\"w-full px-4 py-4 border rounded-md focus:outline-none focus:border-blue-400 bg-transparent font-[Alegreya] placeholder:opacity-20 placeholder:text-white \\\"\\n                required\\n                placeholder=\\\"Title for the blog\\\"\\n              />\\n            </div>\\n            <div className=\\\"relative\\\">\\n              <label\\n                htmlFor=\\\"Preview\\\"\\n        \",\n            \"        className=\\\"absolute text-lg bg-[#231e1d] top-0 left-0 -mt-3 ml-4 text-white font-[Montserrat] font-extralight\\\"\\n              >\\n                Preview\\n              </label>\\n              <textarea\\n                name=\\\"Preview\\\"\\n                value={preview}\\n                onChange={(e) => setpreview(e.target.value)}\\n                className=\\\"w-full min-h-[20vh] px-2 py-4  border rounded-md focus:outline-none focus:border-blue-400 bg-transparent font-[Alegreya] placeholder:opacity-20\",\n            \" placeholder:text-white \\\"\\n                required\\n                placeholder=\\\"Only upto 100 words\\\"\\n              />\\n            </div>\\n            <h1>Edit your blog here, Press \\\"/\\\" to start editing</h1>\\n            <div className=\\\"relative w-full bg-neutral-100 font-[Alegreya] rounded-md flex p-5\\\">\\n              <EditorComponent\\n                initialData={{}}\\n                onContentChange={(data) => setContent(data)}\\n              />\\n            </div>\\n            <button\\n              ty\",\n            \"pe=\\\"submit\\\"\\n              className=\\\"w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition duration-300\\\"\\n            >\\n              Submit\\n            </button>\\n          </form>\\n        </div>\\n      </div>\\n    </>\\n  );\\n}\\n\\nexport default AddBlog;\\n\"\n        ],\n        \"blog-app/src/components/Auth.jsx\": [\n            \"import { Link } from \\\"react-router-dom\\\";\\n\\nexport default function Auth() {\\n    return (\\n        <>\\n            <div className=\\\"mt-10\\\">\\n                <h1 className=\\\"text-xl\\\">Want to write your own blogs?</h1>\\n                <div className=\\\"mt-5 flex gap-2\\\">\\n                    <Link\\n                        to=\\\"/Auth\\\"\\n                        className=\\\"border-2 border-[#b8b4b0] rounded-md p-4 \\\"\\n                    >\\n                        Sign In\\n                    </Link>\\n                </d\",\n            \"iv>\\n            </div>\\n        </>\\n    );\\n}\\n\"\n        ],\n        \"blog-app/src/components/BlogContent.jsx\": [\n            \"import React, { useState, useEffect } from \\\"react\\\";\\nimport Markdown from \\\"react-markdown\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nfunction BlogContent({ content }) {\\n  const { Title, Content, Date: uploadDate } = content;\\n  const [FDate, setFDate] = useState(uploadDate);\\n\\n  function formatDate() {\\n    const blogDate = new Date(uploadDate);\\n    const formattedDate = blogDate.toLocaleDateString(\\\"en-US\\\", {\\n      month: \\\"long\\\",\\n      day: \\\"numeric\\\",\\n      year: \\\"numeric\\\",\\n    });\\n    setFDate(for\",\n            \"mattedDate);\\n  }\\n\\n  useEffect(() => {\\n    if (content) {\\n      formatDate();\\n    }\\n  }, [content]);\\n\\n  return (\\n    <>\\n      <div className=\\\"lg:w-[45%]\\\">\\n        <p className=\\\"text-[#737170] text-l\\\">{FDate}</p>\\n        <p className=\\\"text-2xl my-2 underline\\\">{Title}</p>\\n        <div className=\\\"content my-10 space-y-4\\\">\\n          {Content &&\\n            Content?.blocks?.map((block) => {\\n              switch (block.type) {\\n                case \\\"header\\\":\\n                  return (\\n                  \",\n            \"  <h1\\n                      key={block.id}\\n                      className={`text-${block.data.level}xl font-bold`}\\n                    >\\n                      {block.data.text}\\n                    </h1>\\n                  );\\n                case \\\"paragraph\\\":\\n                  return (\\n                    <p\\n                      key={block.id}\\n                      dangerouslySetInnerHTML={{ __html: block.data.text }}\\n                    />\\n                  );\\n                // case \\\"list\\\":\\n  \",\n            \"              //     return (\\n                //         <ul\\n                //             key={block.id}\\n                //             className={\\n                //                 block.data.style === \\\"ordered\\\"\\n                //                     ? \\\"list-decimal\\\"\\n                //                     : \\\"list-disc\\\"\\n                //             }\\n                //         >\\n                //             {block.data.items.map((item, idx) => (\\n                //                 <li key=\",\n            \"{idx}>{item}</li>\\n                //             ))}\\n                //         </ul>\\n                //     );\\n                case \\\"table\\\":\\n                  return (\\n                    <table\\n                      key={block.id}\\n                      className=\\\"table-auto border-collapse border border-gray-300 my-4\\\"\\n                    >\\n                      <tbody>\\n                        {block.data.content.map((row, rowIndex) => (\\n                          <tr key={rowIndex}>\\n           \",\n            \"                 {row.map((cell, cellIndex) => (\\n                              <td\\n                                key={cellIndex}\\n                                className=\\\"border border-gray-300 px-2 py-1\\\"\\n                              >\\n                                {cell}\\n                              </td>\\n                            ))}\\n                          </tr>\\n                        ))}\\n                      </tbody>\\n                    </table>\\n                  );\\n            \",\n            \"    // case \\\"quote\\\":\\n                //     return (\\n                //         <blockquote\\n                //             key={block.id}\\n                //             className=\\\"border-l-4 border-gray-400 pl-4 italic my-4\\\"\\n                //         >\\n                //             {block.data.text}\\n                //             <footer className=\\\"text-sm text-gray-500\\\">\\n                //                 {block.data.caption}\\n                //             </footer>\\n                //        \",\n            \" </blockquote>\\n                //     );\\n                case \\\"code\\\":\\n                  return (\\n                    <pre\\n                      key={block.id}\\n                      className=\\\"bg-gray-900 text-white p-4 rounded-lg my-4 \\\"\\n                    >\\n                      <code>{block.data.code}</code>\\n                    </pre>\\n                  );\\n                case \\\"delimiter\\\":\\n                  return <hr key={block.id} className=\\\"my-4 border-gray-300\\\" />;\\n                default:\\n\",\n            \"                  return null;\\n              }\\n            })}\\n        </div>\\n        <Link to={`/`} className=\\\"text-white underline italic\\\">\\n          Go Back\\n        </Link>\\n      </div>\\n    </>\\n  );\\n}\\n\\nexport default BlogContent;\\n\"\n        ],\n        \"blog-app/src/components/BlogList.jsx\": [\n            \"import BlogPrev from \\\"./BlogPrev\\\";\\n\\nfunction BlogList({ BlogsData }) {\\n    if (BlogsData.length == 0) {\\n        return (\\n            <div className=\\\"flex lg:w-[45%] sm:w-full lg:justify-center sm:justify-normal\\\">\\n                <h1 className=\\\"text-center text-2xl\\\">You have no blogs available..</h1>\\n            </div>\\n        );\\n    }\\n    return (\\n        <>\\n            <div className=\\\"flex text-[#b8b4b0] lg:w-[45%] sm:w-full flex-col gap-10\\\">\\n                {BlogsData.map((Blog) => (\\n         \",\n            \"           <BlogPrev key={Blog._id} Blogs={Blog} />\\n                ))}\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport default BlogList;\\n\"\n        ],\n        \"blog-app/src/components/BlogPrev.jsx\": [\n            \"import React, { useState, useEffect } from \\\"react\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nfunction BlogPrev({ Blogs }) {\\n    const { Title, Preview, Date: uploadDate, _id } = Blogs;\\n    const [FDate, setFDate] = useState(uploadDate);\\n\\n    function formatDate() {\\n        const blogDate = new Date(uploadDate);\\n        const FomattedDate = blogDate.toLocaleDateString(\\\"en-US\\\", {\\n            month: \\\"long\\\",\\n            day: \\\"numeric\\\",\\n            year: \\\"numeric\\\",\\n        });\\n        setFDate(Fomat\",\n            \"tedDate);\\n    }\\n    useEffect(() => {\\n        formatDate();\\n    }, []);\\n\\n    return (\\n        <>\\n            <div>\\n                <p className=\\\"text-[#737170] text-l\\\">{FDate}</p>\\n                <p className=\\\"text-2xl my-2 line-clamp-2 w-full\\\">{Title}</p>\\n                <p className=\\\"my-6 line-clamp-5\\\">{Preview}</p>\\n\\n                <Link to={`/Blog/${_id}`} className=\\\"text-[#737170] italic\\\">\\n                    Read more\\n                </Link>\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport \",\n            \"default BlogPrev;\\n\"\n        ],\n        \"blog-app/src/components/EditBlog.jsx\": [\n            \"import { useState, useEffect, useContext } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\nimport { MdEdit } from \\\"react-icons/md\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport { InfinitySpin } from \\\"react-loader-spinner\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nfunction EditBlog() {\\n    const { user } = useContext(AuthContext);\\n    const [Data, setData] = useState([{}]);\\n    const [loading, setLoading] = useState(false);\\n\\n    useEffec\",\n            \"t(() => {\\n        async function fetchBlogs() {\\n            setLoading(true);\\n            const response = await axios.get(`${backendURL}/${user._id}/blogs`);\\n            setData(response.data.Blogs);\\n            setLoading(false);\\n        }\\n        fetchBlogs();\\n    }, []);\\n\\n    return (\\n        <>\\n        <div className=\\\"lg:p-24 sm:p-5 w-[100vw] min-h-screen text-[#b8b4b0]\\\">\\n                <h1 className=\\\"font-[Montserrat] text-2xl text-white uppercase\\\">\\n                    Edit Blogs\\n        \",\n            \"        </h1>\\n                <hr className=\\\"mt-4 border-2 rounded\\\" />\\n                {loading ? (\\n                    <InfinitySpin\\n                        visible={true}\\n                        width=\\\"200\\\"\\n                        color=\\\"white\\\"\\n                        ariaLabel=\\\"infinity-spin-loading\\\"\\n                    />\\n                ) : (\\n                    <>\\n                        {Data.length === 0 && (\\n                            <h1 className=\\\"text-center text-2xl mt-10 font-[Mon\",\n            \"tserrat] whitespace-nowrap\\\">\\n                                No blogs available\\n                            </h1>\\n                        )}\\n                        {Data.map((blog) => (\\n                            <div className=\\\"text-lg\\\" key={blog._id}>\\n                                <div className=\\\"mt-10 flex justify-between items-center\\\">\\n                                    <h2 className=\\\"font-bold uppercase text-white truncate\\\">\\n                                        Title - {' '}\\n       \",\n            \"                                 <span className=\\\"text-[#b8b4b0] normal-case\\\">\\n                                            {blog.Title}\\n                                        </span>\\n                                    </h2>\\n                                    <Link to={`Edit/${blog._id}`}>\\n                                        <MdEdit className=\\\"text-blue-700 text-3xl hover:scale-125 transition-all ease-in-out cursor-pointer\\\" />\\n                                    </Link>\\n                   \",\n            \"             </div>\\n                                <hr className=\\\"mt-2 border-dashed\\\" />\\n                            </div>\\n                        ))}\\n                    </>\\n                )}\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport default EditBlog;\\n\"\n        ],\n        \"blog-app/src/components/EditForm.jsx\": [\n            \"import React, { useEffect, useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\nimport { useNavigate, useParams } from \\\"react-router-dom\\\";\\nimport EditorComponent from \\\"./Editor\\\";\\nimport { InfinitySpin } from \\\"react-loader-spinner\\\";\\nimport toast from \\\"react-hot-toast\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nfunction EditForm() {\\n    const navigate = useNavigate();\\n    const { id } = useParams();\\n    const [title, settitle] = useState({});\\n    const [content, setContent] = useState(\",\n            \"{});\\n    const [preview, setpreview] = useState({});\\n    const [loading, setLoading] = useState(true);\\n\\n    async function fetchBlog() {\\n        try {\\n            const response = await axios.get(`${backendURL}/Blog/${id}`);\\n            settitle(response.data.Title);\\n            const { time, blocks } = response.data.Content;\\n            setContent({ time, blocks });\\n            console.log(content);\\n            setpreview(response.data.Preview);\\n        } catch (error) {\\n            console.err\",\n            \"or(\\\"Error fetching blog data\\\", error);\\n        } finally {\\n            setLoading(false);\\n        }\\n    }\\n\\n    useEffect(() => {\\n        fetchBlog();\\n    }, []);\\n\\n    const handleSubmit = async (e) => {\\n        e.preventDefault();\\n        // settitle(\\\"\\\");\\n        // setContent({});\\n        // setpreview(\\\"\\\");\\n\\n        try {\\n            await axios.post(`${backendURL}/Edit/${id}`, {\\n                title,\\n                content,\\n                preview,\\n            });\\n\\n            toast.success(\",\n            \"\\\"Blog Edited Successfully!!\\\");\\n            navigate(\\\"/Editor/ViewAll\\\");\\n        } catch (error) {\\n            console.error(\\\"Error editing the blog\\\", error);\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"lg:p-24 sm:p-5 w-[100vw] min-h-screen text-[#b8b4b0]\\\">\\n            <h1 className=\\\"font-[Montserrat] text-2xl text-white uppercase\\\">\\n                Edit Blog\\n            </h1>\\n            <hr className=\\\"mt-4 border-2 rounded\\\" />\\n            {loading ? (\\n                <InfinitySpin\\n   \",\n            \"                 visible={true}\\n                    width=\\\"200\\\"\\n                    color=\\\"white\\\"\\n                    ariaLabel=\\\"infinity-spin-loading\\\"\\n                />\\n            ) : (\\n                <div className=\\\"mt-10\\\">\\n                    <form className=\\\"space-y-4\\\" onSubmit={handleSubmit}>\\n                        <div className=\\\"relative\\\">\\n                            <label\\n                                htmlFor=\\\"Title\\\"\\n                                className=\\\"absolute text-lg top-\",\n            \"0 left-0 -mt-3 ml-4 bg-[#231e1d] text-white font-[Montserrat] ]\\\"\\n                            >\\n                                Title\\n                            </label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                name=\\\"Title\\\"\\n                                value={title}\\n                                onChange={(e) => settitle(e.target.value)}\\n                                className=\\\"w-full px-4 py-4 border rounded-md focus:o\",\n            \"utline-none focus:border-blue-400 bg-transparent font-[Alegreya] \\\"\\n                                required\\n                            />\\n                        </div>\\n                        <div className=\\\"relative w-full bg-neutral-100 font-[Alegreya] rounded-md flex p-5\\\">\\n                            <EditorComponent\\n                                initialData={content}\\n                                onContentChange={(data) => setContent(data)}\\n                            />\\n              \",\n            \"          </div>\\n                        <div className=\\\"relative\\\">\\n                            <label\\n                                htmlFor=\\\"Preview\\\"\\n                                className=\\\"absolute text-lg bg-[#231e1d] top-0 left-0 -mt-3 ml-4 text-white font-[Montserrat] font-extralight\\\"\\n                            >\\n                                Preview\\n                            </label>\\n                            <textarea\\n                                name=\\\"Preview\\\"\\n            \",\n            \"                    value={preview}\\n                                onChange={(e) => setpreview(e.target.value)}\\n                                className=\\\"w-full min-h-[20vh] px-2 py-4  border rounded-md focus:outline-none focus:border-blue-400 bg-transparent font-[Alegreya]\\\"\\n                                required\\n                            />\\n                        </div>\\n                        <button\\n                            type=\\\"submit\\\"\\n                            className=\\\"w-full\",\n            \" bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition duration-300\\\"\\n                        >\\n                            Submit\\n                        </button>\\n                    </form>\\n                </div>\\n            )}\\n        </div>\\n    );\\n}\\n\\nexport default EditForm;\\n\"\n        ],\n        \"blog-app/src/components/Editor.jsx\": [\n            \"import React, { useEffect, useRef, useState } from \\\"react\\\";\\nimport EditorJS from \\\"@editorjs/editorjs\\\";\\nimport { EDITOR_JS_TOOLS } from \\\"../utils/editorTools\\\";\\n\\nconst EditorComponent = ({ onContentChange, initialData }) => {\\n  const ejInstance = useRef(null);\\n  const [isLoading, setIsLoading] = useState(true);\\n\\n  const initEditor = () => {\\n    // Destroy any existing editor instance before reinitializing\\n    if (ejInstance.current) {\\n      ejInstance.current.destroy();\\n    }\\n\\n    const editor = n\",\n            \"ew EditorJS({\\n      tools: EDITOR_JS_TOOLS,\\n      holder: \\\"editorjs\\\",\\n      onReady: () => {\\n        ejInstance.current = editor;\\n        setIsLoading(false); // Editor is ready\\n        console.log(\\\"Editor initialized successfully\\\");\\n      },\\n      // autofocus: true,\\n      data: { time: initialData.time, blocks: initialData.blocks } || {},\\n      onChange: async () => {\\n        try {\\n          const content = await editor.saver.save();\\n          if (onContentChange) {\\n            onContentChange\",\n            \"(content);\\n          }\\n        } catch (error) {\\n          console.error(\\\"Error saving editor content:\\\", error);\\n        }\\n      },\\n    });\\n\\n    editor.isReady.catch((error) => {\\n      console.error(\\\"Editor initialization failed:\\\", error);\\n      setIsLoading(false);\\n    });\\n  };\\n\\n  useEffect(() => {\\n    initEditor();\\n\\n    return () => {\\n      if (ejInstance.current) {\\n        ejInstance.current.destroy();\\n        ejInstance.current = null;\\n      }\\n    };\\n  }, []); // Reinitialize when initialDat\",\n            \"a changes\\n\\n  return (\\n    <>\\n      {isLoading && (\\n        <div className=\\\"flex justify-center items-center min-h-[300px]\\\">\\n          <p className=\\\"text-gray-500\\\">Loading editor...</p>\\n        </div>\\n      )}\\n      <div\\n        id=\\\"editorjs\\\"\\n        className={`text-black ${isLoading ? \\\"hidden\\\" : \\\"\\\"}`}\\n      ></div>\\n    </>\\n  );\\n};\\n\\nexport default EditorComponent;\\n\"\n        ],\n        \"blog-app/src/components/Footer.jsx\": [\n            \"import React from \\\"react\\\";\\nimport { FaGithub } from \\\"react-icons/fa\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nconst Footer = () => {\\n    return (\\n        <>\\n            <div className=\\\"flex z-10 flex-col sm:hidden\\\">\\n                <div className=\\\"copyright flex justify-between items-center lg:px-10 sm:px-5 h-[10vh] bg-[#111117] text-white\\\">\\n                    <p className=\\\"sm:text-sm\\\">\\n                        DevDiary&copy; 2023, All rights reserved{\\\" \\\"}\\n                    </p>\\n            \",\n            \"        <Link to=\\\"https://github.com/AvadhootSmart/Av_Blog-App_FS\\\">\\n                        <FaGithub className=\\\"lg:text-3xl sm:text-lg hover:scale-110 transition\\\" />\\n                    </Link>\\n                </div>\\n            </div>\\n        </>\\n    );\\n};\\n\\nexport default Footer;\\n\"\n        ],\n        \"blog-app/src/components/Line.jsx\": [\n            \"import React from 'react'\\n\\nfunction Line() {\\n  return (\\n    <div className='w-[20%] h-1 rounded bg-[#b8b4b0]'></div>\\n  )\\n}\\n\\nexport default Line\\n\"\n        ],\n        \"blog-app/src/components/MobilePanel.jsx\": [\n            \"import { Link } from \\\"react-router-dom\\\";\\nimport { HiViewList } from \\\"react-icons/hi\\\";\\nimport { IoMdAdd } from \\\"react-icons/io\\\";\\nimport { MdEdit } from \\\"react-icons/md\\\";\\nimport { FaHome } from \\\"react-icons/fa\\\";\\nimport { MdDeleteForever } from \\\"react-icons/md\\\";\\n\\nconst MobilePanel = () => {\\n    return (\\n        <div className=\\\"fixed bottom-0 h-20 w-full sm:bg-[#231e1d] lg:bg-neutral-900 sm:border-t flex gap-10 sm:gap-12 text-white text-2xl justify-center\\\">\\n            <Link to=\\\"/Editor/ViewAll\\\" cla\",\n            \"ssName=\\\"flex items-center gap-4\\\">\\n                <HiViewList />\\n            </Link>\\n            <Link to=\\\"/Editor/AddBlog\\\" className=\\\"flex items-center gap-4\\\">\\n                <IoMdAdd />\\n            </Link>\\n            <Link to=\\\"/\\\" className=\\\"flex items-center gap-4\\\">\\n                <FaHome />\\n            </Link>\\n            <Link to=\\\"/Editor/EditBlog\\\" className=\\\"flex items-center gap-4\\\">\\n                <MdEdit />\\n            </Link>\\n            <Link to=\\\"/Editor/RemoveBlog\\\" className=\\\"flex \",\n            \"items-center gap-4\\\">\\n                <MdDeleteForever />\\n            </Link>\\n        </div>\\n    );\\n};\\n\\nexport default MobilePanel;\\n\"\n        ],\n        \"blog-app/src/components/Panel.jsx\": [\n            \"imaaport React from \\\"react\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nimport { HiViewList } from \\\"react-icons/hi\\\";\\nimport { IoMdAdd, IoMdRemove } from \\\"react-icons/io\\\";\\nimport { MdEdit, MdOutlineFormatColorFill } from \\\"react-icons/md\\\";\\nimport { FaHome } from \\\"react-icons/fa\\\";\\nimport { MdDeleteForever } from \\\"react-icons/md\\\";\\n\\nfunction Panel() {\\n    return (\\n        <>\\n            <div className=\\\"lg:w-[20vw] z-0 h-screen fixed bg-[#111117] text-white\\\">\\n                <div className=\\\"p-10 text-x\",\n            \"l uppercase font-[Montserrat] font-light\\\">\\n                    Admin Panel\\n                    <div className=\\\"mt-14 text-lg\\\">\\n                        <Link to=\\\"/Editor/ViewAll\\\" className=\\\"flex items-center gap-4\\\">\\n                            <HiViewList /> View All\\n                        </Link>\\n                    </div>\\n                    <div className=\\\"mt-14 text-lg\\\">\\n                        <Link to=\\\"/Editor/AddBlog\\\" className=\\\"flex items-center gap-4\\\">\\n                            <IoMdA\",\n            \"dd /> Create Blog\\n                        </Link>\\n                    </div>\\n                    <div className=\\\"mt-14 text-lg\\\">\\n                        <Link to=\\\"/Editor/RemoveBlog\\\" className=\\\"flex items-center gap-4\\\">\\n                            <MdDeleteForever /> Delete Blog\\n                        </Link>\\n                    </div>\\n                    <div className=\\\"mt-14 text-lg\\\">\\n                        <Link to=\\\"/Editor/EditBlog\\\" className=\\\"flex items-center gap-4\\\">\\n                    \",\n            \"        <MdEdit /> Edit Blog\\n                        </Link>\\n                    </div>\\n                    <div className=\\\"mt-14 text-lg\\\">\\n                        <Link to=\\\"/\\\" className=\\\"flex items-center gap-4\\\">\\n                            <FaHome /> Home Page\\n                        </Link>\\n                    </div>\\n                </div>\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport default Panel;\\n\"\n        ],\n        \"blog-app/src/components/Recent.jsx\": [\n            \"import React from \\\"react\\\";\\n\\nfunction Recent({ list }) {\\n  return (\\n    <>\\n      <div className=\\\"mt-14\\\">\\n        <h1 className=\\\"uppercase text-xl\\\">Recent Posts</h1>\\n        <div className=\\\"flex flex-col mt-5 gap-1\\\">\\n          <li className=\\\"list-none underline text-l\\\">Title</li>\\n        </div>\\n      </div>\\n    </>\\n  );\\n}\\n\\nexport default Recent;\\n\"\n        ],\n        \"blog-app/src/components/RemoveBlogs.jsx\": [\n            \"import axios from \\\"axios\\\";\\nimport { useContext, useEffect, useState } from \\\"react\\\";\\nimport { MdDeleteForever } from \\\"react-icons/md\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport { InfinitySpin } from \\\"react-loader-spinner\\\";\\nimport toast from \\\"react-hot-toast\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nfunction RemoveBlogs() {\\n  const { user } = useContext(AuthContext);\\n  const [Data, setData] = useState([{}]);\\n  const [loading, setLoading] = useState(false);\\n\\n  async fu\",\n            \"nction DeleteBlog(id) {\\n    try {\\n      await axios.delete(`${backendURL}/Editor/RemoveBlog/${id}`);\\n      setData((prevData) => prevData.filter((blog) => blog._id !== id));\\n      toast.success(\\\"Blog Deleted Successfully!!\\\");\\n    } catch (err) {\\n      toast.error(\\\"Something went wrong, try again later\\\");\\n      console.log(\\\"Error deleting the blog\\\", err);\\n    }\\n  }\\n\\n  async function fetchBlogs() {\\n    setLoading(true);\\n    try {\\n      const response = await axios.get(`${backendURL}/${user._id}/bl\",\n            \"ogs`);\\n      setData(response.data.Blogs);\\n    } catch (error) {\\n      console.error(\\\"Error fetching blogs\\\", error);\\n    } finally {\\n      setLoading(false);\\n    }\\n  }\\n\\n  useEffect(() => {\\n    fetchBlogs();\\n  }, []);\\n\\n  return (\\n    <div className=\\\"lg:p-24 sm:p-5 w-[100vw] min-h-screen text-[#b8b4b0]\\\">\\n      <h1 className=\\\"font-[Montserrat] text-2xl text-white uppercase\\\">\\n        Remove Blog\\n      </h1>\\n      <hr className=\\\"mt-4 border-2 rounded\\\" />\\n      {loading ? (\\n        <InfinitySpin\\n     \",\n            \"     visible={true}\\n          width=\\\"200\\\"\\n          color=\\\"white\\\"\\n          ariaLabel=\\\"infinity-spin-loading\\\"\\n        />\\n      ) : (\\n        <>\\n          {Data.length === 0 && (\\n            <h1 className=\\\"text-center text-2xl mt-10 font-[Montserrat] whitespace-nowrap\\\">\\n              No blogs available\\n            </h1>\\n          )}\\n          {Data.map((blog) => (\\n            <div className=\\\"text-lg\\\" key={blog._id}>\\n              <div className=\\\"mt-10 flex justify-between items-center\\\">\\n         \",\n            \"       <h2 className=\\\"font-bold uppercase text-white truncate\\\">\\n                  Title-{\\\" \\\"}\\n                  <span className=\\\"text-[#b8b4b0] normal-case\\\">\\n                    {blog.Title}\\n                  </span>\\n                </h2>\\n                <MdDeleteForever\\n                  onClick={() => DeleteBlog(blog._id)}\\n                  className=\\\"text-red-700 text-3xl hover:scale-125 transition-all ease-in-out cursor-pointer\\\"\\n                />\\n              </div>\\n              <hr class\",\n            \"Name=\\\"mt-2 border-dashed\\\" />\\n            </div>\\n          ))}\\n        </>\\n      )}\\n    </div>\\n  );\\n}\\n\\nexport default RemoveBlogs;\\n\"\n        ],\n        \"blog-app/src/components/Title.jsx\": [\n            \"import Line from \\\"./Line\\\";\\nimport gsap from \\\"gsap\\\";\\nimport { useGSAP } from \\\"@gsap/react\\\";\\nfunction Title({ title }) {\\n    useGSAP(() => {\\n        gsap.from(\\\".Heading\\\", {\\n            duration: 0.9,\\n            opacity: 0,\\n            y: 100,\\n        });\\n    });\\n    return (\\n        <>\\n            <div className=\\\"flex justify-around text-[#b8b4b0] w-full lg:mt-[20vh] sm:mt-[10vh] items-center\\\">\\n                <Line />\\n                <h2 className=\\\"Heading lg:text-4xl sm:text-3xl font-[Alegreya]\",\n            \" uppercase\\\">\\n                    {title}\\n                </h2>\\n                <Line />\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport default Title;\\n\"\n        ],\n        \"blog-app/src/components/ViewAll.jsx\": [\n            \"import React, { useContext, useEffect, useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport { InfinitySpin } from \\\"react-loader-spinner\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nfunction ViewAll() {\\n    const { user } = useContext(AuthContext);\\n    const [Data, setData] = useState([{}]);\\n    const [loading, setLoading] = useState(false);\\n\\n    async function fetchBlogs() {\\n        setLoading(true);\\n        try {\\n            co\",\n            \"nst response = await axios.get(`${backendURL}/${user._id}/blogs`);\\n            setData(response.data.Blogs);\\n        } catch (err) {\\n            console.log(\\\"Error in fetching blogs!\\\", err);\\n        } finally {\\n            setLoading(false);\\n        }\\n    }\\n\\n    useEffect(() => {\\n        fetchBlogs();\\n    }, []);\\n\\n    return (\\n        <>\\n            <div className=\\\"w-[100vw] min-h-screen lg:p-24 sm:p-5 sm:mb-20 text-[#b8b4b0]\\\">\\n                <h1 className=\\\"font-[Montserrat] text-2xl text-white\",\n            \" uppercase\\\">\\n                    All Blogs\\n                </h1>\\n                <hr className=\\\"mt-4 border-2 rounded\\\" />\\n                {loading ? (\\n                    <InfinitySpin\\n                        visible={true}\\n                        width=\\\"200\\\"\\n                        color=\\\"white\\\"\\n                        ariaLabel=\\\"infinity-spin-loading\\\"\\n                    />\\n                ) : (\\n                    <>\\n                        {Data.length === 0 && (\\n                            \",\n            \"<h1 className=\\\"text-center text-2xl mt-10 font-[Montserrat] whitespace-nowrap\\\">\\n                                 No blogs available\\n                            </h1>\\n                        )}\\n                        {Data.map((blog) => (\\n                            <div className=\\\"text-lg\\\" key={blog._id}>\\n                                <h2 className=\\\"mt-10\\\">\\n                                    <span className=\\\"font-bold uppercase text-white\\\">Title -</span>{\\\" \\\"}\\n                                \",\n            \"    {blog.Title}\\n                                </h2>\\n                                <p className=\\\"mt-4\\\">\\n                                    <span className=\\\"font-bold uppercase text-white\\\">\\n                                        Preview -\\n                                    </span>\\n                                    {blog.Preview}\\n                                </p>\\n                                <p className=\\\"mt-3\\\">\\n                                    <span className=\\\"font-bold uppercas\",\n            \"e text-white\\\">Date - </span>\\n                                    {blog.Date}\\n                                </p>\\n                                <hr className=\\\"mt-2 border-dashed\\\" />\\n                            </div>\\n                        ))}\\n                    </>\\n                )}\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport default ViewAll;\\n\"\n        ],\n        \"blog-app/src/context/AuthContext.jsx\": [\n            \"import { createContext, useState } from \\\"react\\\";\\n\\nconst AuthContext = createContext();\\n\\nexport const AuthProvider = ({ children }) => {\\n    const [user, setUser] = useState(null);\\n\\n    const login = (userData) => {\\n        setUser(userData);\\n    };\\n\\n    const logout = () => {\\n        setUser(null);\\n    };\\n\\n    return (\\n        <AuthContext.Provider value={{ user, login, logout }}>\\n            {children}\\n        </AuthContext.Provider>\\n    );\\n};\\n\\nexport default AuthContext;\\n\"\n        ],\n        \"blog-app/src/index.css\": [\n            \"@import \\\"tailwindcss/base\\\";\\n@import \\\"tailwindcss/components\\\";\\n@import \\\"tailwindcss/utilities\\\";\\n\\n@import url(\\\"https://fonts.googleapis.com/css2?family=Montserrat:wght@700&display=swap\\\");\\n/*Font family: Montserrat;*/\\n\\n@import url(\\\"https://fonts.googleapis.com/css2?family=Alegreya&display=swap\\\");\\n/*Font family: Alegreya;*/\\n\\n* {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/*Color Pallete \\n    #231e1d(BG-1)\\n    #02454F(BG-2)\\n    #b8b4b0(TEXT)\\n    #111117(Dark BG)\\n*/\\n\\n/* For WebKit browsers */\\n/* Track */\\n::-webkit\",\n            \"-scrollbar {\\n  width: 8px; /* width of the scrollbar */\\n}\\n\\n/* Handle */\\n::-webkit-scrollbar-thumb {\\n  background-color: #888; /* color of the scrollbar handle */\\n  border-radius: 4px; /* roundness of the scrollbar handle */\\n}\\n\\n/* Handle on hover */\\n::-webkit-scrollbar-thumb:hover {\\n  background-color: #555; /* color of the scrollbar handle on hover */\\n}\\n\\n/* Track */\\n::-webkit-scrollbar-track {\\n  background: #f1f1f1; /* color of the scrollbar track */\\n}\\n\\n/* Handle when scrolling */\\n::-webkit-scro\",\n            \"llbar-thumb:active {\\n  background-color: #000; /* color of the scrollbar handle when scrolling */\\n}\\n\"\n        ],\n        \"blog-app/src/main.jsx\": [\n            \"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom/client\\\";\\nimport \\\"./index.css\\\";\\nimport {\\n  Route,\\n  RouterProvider,\\n  createBrowserRouter,\\n  createRoutesFromElements,\\n} from \\\"react-router-dom\\\";\\n\\nimport { AuthProvider } from \\\"./context/AuthContext\\\";\\nimport Layout from \\\"./Layout\\\";\\nimport Home from \\\"./pages/Home\\\";\\nimport BlogPage from \\\"./pages/BlogPage\\\";\\nimport AdminLayout from \\\"./AdminLayout\\\";\\nimport ViewAll from \\\"./components/ViewAll\\\";\\nimport AddBlog from \\\"./components/AddBlog\\\";\\nimport \",\n            \"RemoveBlogs from \\\"./components/RemoveBlogs\\\";\\nimport EditBlog from \\\"./components/EditBlog\\\";\\nimport EditForm from \\\"./components/EditForm\\\";\\nimport EditBlogBase from \\\"./EditBlogBase\\\";\\nimport AuthPage from \\\"./pages/AuthPage\\\";\\nimport Profile from \\\"./pages/Profile\\\";\\nimport { Analytics } from \\\"@vercel/analytics/react\\\";\\nimport { Toaster } from \\\"react-hot-toast\\\";\\n\\nconst router = createBrowserRouter(\\n  createRoutesFromElements(\\n    <Route path=\\\"/\\\" element={<Layout />}>\\n      <Route path=\\\"\\\" element={<Home /\",\n            \">} />\\n      <Route path=\\\"/Auth\\\" element={<AuthPage />} />\\n      <Route path=\\\"/Profile\\\" element={<Profile />} />\\n      <Route path=\\\"Blog/:id\\\" element={<BlogPage />} />\\n      <Route path=\\\"Editor\\\" element={<AdminLayout />}>\\n        <Route path=\\\"ViewAll\\\" element={<ViewAll />} />\\n        <Route path=\\\"AddBlog\\\" element={<AddBlog />} />\\n        <Route path=\\\"RemoveBlog\\\" element={<RemoveBlogs />} />\\n        <Route path=\\\"EditBlog\\\" element={<EditBlogBase />}>\\n          <Route path=\\\"\\\" element={<EditBlog />} \",\n            \"/>\\n          <Route path=\\\"Edit/:id\\\" element={<EditForm />} />\\n        </Route>\\n      </Route>\\n    </Route>,\\n  ),\\n);\\n\\nReactDOM.createRoot(document.getElementById(\\\"root\\\")).render(\\n  <>\\n    <Toaster />\\n    <AuthProvider>\\n      <RouterProvider router={router} />\\n    </AuthProvider>\\n    <Analytics />\\n  </>,\\n);\\n\"\n        ],\n        \"blog-app/src/pages/AuthPage.jsx\": [\n            \"import { useState, useContext } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\nimport { useNavigate } from \\\"react-router-dom\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport toast from \\\"react-hot-toast\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nconst AuthPage = () => {\\n  const [isLogin, setIsLogin] = useState(true);\\n\\n  return (\\n    <div className=\\\"min-h-screen flex items-center justify-center bg-[#231e1d]\\\">\\n      <div className=\\\"bg-transparent lg:p-8 sm:p-4 rounded-lg shadow-lg\",\n            \" lg:w-96 sm:w-80 border-2 border-[#b8b4b0]\\\">\\n        <h2 className=\\\"text-2xl font-bold mb-6 text-center text-[#b8b4b0]\\\">\\n          {isLogin ? \\\"Login\\\" : \\\"Register\\\"}\\n        </h2>\\n        {isLogin ? <LoginForm /> : <RegisterForm />}\\n        <div className=\\\"text-center mt-4\\\">\\n          <button\\n            onClick={() => setIsLogin(!isLogin)}\\n            className=\\\"text-blue-500 hover:underline\\\"\\n          >\\n            {isLogin\\n              ? \\\"New Here? Create an Account\\\"\\n              : \\\"Have an A\",\n            \"ccount?, Login instead\\\"}\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  );\\n};\\n\\nconst LoginForm = () => {\\n  const navigateTo = useNavigate();\\n  const { login } = useContext(AuthContext);\\n\\n  const [username, setusername] = useState(\\\"\\\");\\n  const [password, setpassword] = useState(\\\"\\\");\\n\\n  const handleLogin = async (e) => {\\n    e.preventDefault();\\n    try {\\n      const response = await axios.post(`${backendURL}/login`, {\\n        username,\\n        password,\\n      });\\n      if (response.s\",\n            \"tatus == 200) {\\n        login(response.data);\\n        navigateTo(\\\"/\\\");\\n      }\\n    } catch (error) {\\n      toast.error(\\\"Username or Password maybe incorrect, try again\\\");\\n      console.error(\\\"Login failed\\\", error);\\n    }\\n  };\\n\\n  return (\\n    <form className=\\\"space-y-4\\\" onSubmit={handleLogin}>\\n      <div>\\n        <label className=\\\"block text-[#b8b4b0]\\\">Username</label>\\n        <input\\n          type=\\\"text\\\"\\n          className=\\\"w-full bg-transparent p-2 text-[#b8b4b0] border border-gray-300 rounded\",\n            \" mt-1\\\"\\n          required\\n          value={username}\\n          onChange={(e) => setusername(e.target.value)}\\n        />\\n      </div>\\n      <div>\\n        <label className=\\\"block text-[#b8b4b0]\\\">Password</label>\\n        <input\\n          type=\\\"password\\\"\\n          className=\\\"w-full p-2 border border-gray-300 bg-transparent text-[#b8b4b0] rounded mt-1\\\"\\n          required\\n          value={password}\\n          onChange={(e) => setpassword(e.target.value)}\\n        />\\n      </div>\\n      <button\\n        ty\",\n            \"pe=\\\"submit\\\"\\n        className=\\\"w-full bg-blue-500 text-white p-2 rounded mt-4 hover:bg-blue-600\\\"\\n      >\\n        Login\\n      </button>\\n    </form>\\n  );\\n};\\n\\nconst RegisterForm = () => {\\n  const navigateTo = useNavigate();\\n  const { login } = useContext(AuthContext);\\n\\n  const [username, setusername] = useState(\\\"\\\");\\n  const [password, setpassword] = useState(\\\"\\\");\\n  const handleRegister = async (e) => {\\n    e.preventDefault();\\n    setusername(\\\"\\\");\\n    setpassword(\\\"\\\");\\n    try {\\n      const response \",\n            \"= await axios.post(`${backendURL}/register`, {\\n        username,\\n        password,\\n      });\\n\\n      if (response.status === 200) {\\n        login(response.data);\\n        navigateTo(\\\"/\\\");\\n      } else if (response.status === 201) {\\n        toast.error(\\\"Username already exists, please login instead\\\");\\n      }\\n    } catch (error) {\\n      toast.error(\\\"Registration failed, Please try again later\\\");\\n      console.error(\\\"Registration failed\\\", error);\\n    }\\n  };\\n  return (\\n    <form className=\\\"space-y-4\\\"\",\n            \" onSubmit={handleRegister}>\\n      <div>\\n        <label className=\\\"block text-[#b8b4b0]\\\">Username</label>\\n        <input\\n          type=\\\"text\\\"\\n          className=\\\"w-full p-2 border border-gray-300 bg-transparent text-[#b8b4b0] rounded mt-1\\\"\\n          required\\n          value={username}\\n          onChange={(e) => setusername(e.target.value)}\\n        />\\n      </div>\\n      <div>\\n        <label className=\\\"block text-[#b8b4b0]\\\">Password</label>\\n        <input\\n          type=\\\"password\\\"\\n          class\",\n            \"Name=\\\"w-full p-2 border border-gray-300 rounded mt-1 bg-transparent text-[#b8b4b0]\\\"\\n          required\\n          value={password}\\n          onChange={(e) => setpassword(e.target.value)}\\n        />\\n      </div>\\n      <button\\n        type=\\\"submit\\\"\\n        className=\\\"w-full bg-blue-500 text-white p-2 rounded mt-4 hover:bg-blue-600\\\"\\n      >\\n        Register\\n      </button>\\n    </form>\\n  );\\n};\\n\\nexport default AuthPage;\\n\"\n        ],\n        \"blog-app/src/pages/BlogPage.jsx\": [\n            \"import axios from \\\"axios\\\";\\nimport { useEffect, useState } from \\\"react\\\";\\nimport { useParams } from \\\"react-router-dom\\\";\\nimport Title from \\\"../components/Title\\\";\\nimport BlogContent from \\\"../components/BlogContent\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nfunction BlogPage() {\\n    const [blog, setblog] = useState({});\\n    const { id } = useParams();\\n\\n    async function fetchBlog() {\\n        const response = await axios.get(`${backendURL}/Blog/${id}`);\\n        setblog(response.data);\\n \",\n            \"   }\\n    useEffect(() => {\\n        fetchBlog();\\n    }, []);\\n\\n    return (\\n        <div className=\\\"min-h-screen bg-[#231e1d] text-[#b8b4b0]  w-full flex flex-col font-[Alegreya]\\\">\\n            <Title title=\\\"Dev Diary\\\" />\\n            <div className=\\\"Content lg:w-full sm:w-[100vw] flex lg:justify-center sm:px-5 lg:pt-10 sm:pt-5\\\">\\n                <BlogContent content={blog} />\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default BlogPage;\\n\"\n        ],\n        \"blog-app/src/pages/Home.jsx\": [\n            \"import { useContext, useEffect, useState } from \\\"react\\\";\\nimport Title from \\\"../components/Title\\\";\\nimport BlogList from \\\"../components/BlogList\\\";\\nimport axios from \\\"axios\\\";\\nimport Auth from \\\"../components/Auth\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\nimport { InfinitySpin } from \\\"react-loader-spinner\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nfunction Home() {\\n    const [Data, setData] = useState([{}]);\\n\\n    const { user } = useCon\",\n            \"text(AuthContext);\\n\\n    const [loading, setLoading] = useState(false);\\n    useEffect(() => {\\n        async function fetchBlogs() {\\n            setLoading(true);\\n            try {\\n                const response = await axios.get(`${backendURL}/blogs`, {\\n                    withCredentials: true,\\n                });\\n                setData(response.data);\\n            } catch (err) {\\n                console.log(\\\"Error fetching blogs\\\", err);\\n            } finally {\\n                setLoading(false);\",\n            \"\\n            }\\n        }\\n        fetchBlogs();\\n    }, []);\\n\\n    return (\\n        <>\\n            <div className=\\\"min-h-screen bg-[#231e1d] text-[#b8b4b0]  w-full flex flex-col font-[Alegreya]\\\">\\n                <Title title=\\\"Dev Diary\\\" />\\n                <div className=\\\"Content w-full flex lg:flex-row sm:flex-col lg:justify-around sm:justify-normal lg:p-20 sm:p-5\\\">\\n                    {loading ? (\\n                        <InfinitySpin\\n                            visible={true}\\n                    \",\n            \"        width=\\\"200\\\"\\n                            color=\\\"white\\\"\\n                            ariaLabel=\\\"infinity-spin-loading\\\"\\n                        />\\n                    ) : (\\n                        <BlogList BlogsData={Data} />\\n                    )}\\n                    <div className=\\\"Content flex flex-col \\\">\\n                        {/* <About /> */}\\n                        {user ? (\\n                            <div className=\\\"flex gap-4 mt-10\\\">\\n                                <div className\",\n            \"=\\\"border-2 border-white rounded-md w-fit p-4\\\">\\n                                    <Link to={\\\"/Profile\\\"}>Profile</Link>\\n                                </div>\\n                                <div className=\\\"border-2 border-white rounded-md w-fit p-4\\\">\\n                                    <Link to=\\\"/Editor/ViewAll\\\">Manage Blogs</Link>\\n                                </div>\\n                            </div>\\n                        ) : (\\n                            <Auth />\\n                        \",\n            \")}\\n                    </div>\\n                </div>\\n            </div>\\n        </>\\n    );\\n}\\n\\nexport default Home;\\n\"\n        ],\n        \"blog-app/src/pages/Profile.jsx\": [\n            \"import { useContext, useEffect, useState } from \\\"react\\\";\\nimport Title from \\\"../components/Title\\\";\\nimport BlogList from \\\"../components/BlogList\\\";\\nimport axios from \\\"axios\\\";\\nimport Auth from \\\"../components/Auth\\\";\\nimport AuthContext from \\\"../context/AuthContext\\\";\\nimport { Link } from \\\"react-router-dom\\\";\\nimport { useNavigate } from \\\"react-router-dom\\\";\\n\\nconst backendURL = import.meta.env.VITE_BACKEND_URL;\\n\\nexport default function Profile() {\\n    const navigate = useNavigate();\\n    const { user } = us\",\n            \"eContext(AuthContext);\\n    const [Data, setData] = useState([{}]);\\n\\n    async function fetchBlogs() {\\n        if (!user) navigate(\\\"/\\\");\\n        const response = await axios.get(`${backendURL}/${user._id}/blogs`);\\n        setData(response.data.Blogs);\\n    }\\n    useEffect(() => {\\n        fetchBlogs();\\n    }, []);\\n    return (\\n        <>\\n            <div>\\n                <div className=\\\"min-h-screen bg-[#231e1d] text-[#b8b4b0] w-full flex flex-col font-[Alegreya]\\\">\\n                    <Title title=\",\n            \"{`Your Blogs`} />\\n                <div className=\\\"w-full flex lg:flex-row sm:flex-col lg:justify-around sm:justify-normal lg:p-20 sm:p-5\\\">\\n                        <BlogList BlogsData={Data} />\\n                        {user ? (\\n                            <div className=\\\"flex gap-4 mt-10 w-fit h-fit\\\">\\n                                <button className=\\\"border-2 border-white rounded-md w-fit p-4\\\">\\n                                    <Link to={\\\"/\\\"}>All Blogs</Link>\\n                                </\",\n            \"button>\\n                                <button className=\\\"border-2 border-white rounded-md w-fit p-4\\\">\\n                                    <Link to=\\\"/Editor/ViewAll\\\">Manage Blogs</Link>\\n                                </button>\\n                            </div>\\n                        ) : (\\n                            <Auth />\\n                        )}\\n                    </div>\\n                </div>\\n            </div>\\n        </>\\n    );\\n}\\n\"\n        ],\n        \"blog-app/src/utils/editorTools.js\": [\n            \"import Header from \\\"@editorjs/header\\\";\\nimport Paragraph from \\\"@editorjs/paragraph\\\";\\nimport Table from \\\"@editorjs/table\\\";\\nimport Delimiter from \\\"@editorjs/delimiter\\\";\\nimport Code from \\\"@editorjs/code\\\";\\n\\nexport const EDITOR_JS_TOOLS = {\\n    header: {\\n        class: Header,\\n        config: {\\n            levels: [1, 2, 3, 4],\\n            defaultLevel: 2,\\n        },\\n    },\\n    paragraph: {\\n        class: Paragraph,\\n    },\\n    table: {\\n        class: Table,\\n        config: {\\n            rows: 2,\\n     \",\n            \"       cols: 3,\\n        },\\n    },\\n    delimiter: Delimiter, // A simple horizontal line\\n    code: Code, // Code block\\n};\\n\"\n        ],\n        \"blog-app/tailwind.config.js\": [\n            \"/** @type {import('tailwindcss').Config} */\\nexport default {\\n    content: [\\\"./index.html\\\", \\\"./src/**/*.{js,jsx}\\\"],\\n    theme: {\\n        screens: {\\n            sm: \\\"380px\\\",\\n            md: \\\"768px\\\",\\n            lg: \\\"768px\\\",\\n            xl: \\\"1440px\\\",\\n        },\\n        extend: {},\\n    },\\n    plugins: [],\\n};\\n\"\n        ],\n        \"blog-app/vite.config.js\": [\n            \"import { defineConfig } from 'vite'\\nimport react from '@vitejs/plugin-react'\\n\\n// https://vitejs.dev/config/\\nexport default defineConfig({\\n  plugins: [react()],\\n})\\n\"\n        ]\n    },\n    \"message\": \"Repo processed successfully\"\n}"),
			},
		},
		{
			Role: "model",
			Parts: []genai.Part{
				genai.Text("```markdown\n### Route: GET /\n\n**Response:** \n```json\n{\n  \"status\": 200,\n  \"message\": \"Backend Working succesfully!!\"\n}\n```\n\n**Summary:**  \nA basic endpoint to check if the backend server is running.\n\n---\n\n### Route: POST /login\n\n**Response:** \n```json\n{\n  \"status\": 200,\n  \"Username\": \"user_name\",\n  \"_id\": \"user_id\"\n}\n```\n\n**Summary:**  \nAuthenticates a user based on provided username and password. Returns user details on successful login. Redirects to `/Auth` on failure.\n\n---\n\n### Route: POST /register\n\n**Response:** \n```json\n{\n  \"status\": 200,\n  \"Username\": \"user_name\"\n}\n```\nor\n```json\n{\n  \"status\": 201,\n  \"message\": \"Username already taken\",\n  \"Username\": \"existing_user_name\"\n}\n```\n\n**Summary:**  \nRegisters a new user with the given username and password. Returns the registered username or a message if the username already exists.\n\n---\n\n### Route: GET /blogs\n\n**Response:** \n```json\n[\n  {\n    \"_id\": \"blog_id\",\n    \"Title\": \"Blog Title\",\n    \"Content\": {\n      \"time\": 123456789,\n      \"blocks\": []\n    },\n    \"Preview\": \"Blog Preview\",\n    \"Date\": \"date string\",\n    \"User\": {\n      \"_id\": \"user_id\",\n      \"Username\": \"user_name\",\n      \"Password\": \"hashed_password\",\n      \"Blogs\": [\n        \"blog_id\"\n      ]\n    }\n  }\n]\n```\nor\n```json\n{\n  \"status\": 304,\n  \"message\": \"Couldn't fetch any data\"\n}\n```\nor\n```json\n{\n  \"status\": 500,\n  \"message\": \"Internal Server Error\"\n}\n```\n\n**Summary:**  \nFetches and returns a list of all blog posts with user details. Returns 304 if data not available, and 500 for internal server error.\n\n---\n\n### Route: GET /:id/blogs\n\n**Response:** \n```json\n{\n  \"Blogs\": [\n    {\n      \"_id\": \"blog_id\",\n      \"Title\": \"Blog Title\",\n      \"Content\": {\n        \"time\": 123456789,\n        \"blocks\": []\n      },\n      \"Preview\": \"Blog Preview\",\n      \"Date\": \"date string\",\n      \"User\": \"user_id\"\n    }\n  ]\n}\n```\n\n**Summary:**  \nRetrieves all blog posts associated with a specific user ID.\n\n---\n\n### Route: GET /Blog/:id\n\n**Response:** \n```json\n{\n    \"_id\": \"blog_id\",\n    \"Title\": \"Blog Title\",\n    \"Content\": {\n       \"time\": 123456789,\n       \"blocks\": []\n      },\n    \"Preview\": \"Blog Preview\",\n    \"Date\": \"date string\",\n    \"User\": \"user_id\"\n}\n```\n\n**Summary:**  \nFetches a specific blog post by its ID.\n\n---\n\n### Route: GET /EditBlog/:id\n\n**Response:** \n```json\n{\n    \"_id\": \"blog_id\",\n    \"Title\": \"Blog Title\",\n    \"Content\": {\n       \"time\": 123456789,\n       \"blocks\": []\n      },\n    \"Preview\": \"Blog Preview\",\n    \"Date\": \"date string\",\n    \"User\": \"user_id\"\n}\n```\n\n**Summary:**  \nFetches a specific blog post by its ID for editing purposes.\n\n---\n\n### Route: POST /:id/AddBlog\n\n**Response:** \n```json\n{\n    \"status\": 201,\n    \"message\": \"Blog created successfully\",\n    \"blog\": {\n        \"_id\": \"blog_id\",\n        \"Title\": \"Blog Title\",\n        \"Content\": {\n           \"time\": 123456789,\n           \"blocks\": []\n         },\n        \"Preview\": \"Blog Preview\",\n        \"Date\": \"date string\",\n        \"User\": \"user_id\"\n    }\n}\n```\nor\n```json\n{\n  \"status\": 500,\n  \"message\": \"Error creating blog\"\n}\n```\n\n**Summary:**  \nCreates a new blog post associated with a user. Returns 201 on success and 500 for error creating the blog.\n\n---\n\n### Route: POST /Edit/:id\n\n**Response:** \n```json\n{\n  \"status\": 200,\n  \"message\": \"Updated Successfully\"\n}\n```\nor\n```json\n{\n  \"status\": 500,\n  \"message\": \"Internal Server Error\"\n}\n```\n\n**Summary:**  \nUpdates an existing blog post with the provided ID. Returns 200 on success and 500 for internal server error.\n\n---\n\n### Route: DELETE /Editor/RemoveBlog/:id\n\n**Response:** \n```json\n{\n  \"status\": 200,\n  \"message\": \"Blog Deleted Successfully\"\n}\n```\nor\n```json\n{\n  \"status\": 404,\n  \"message\": \"Blog not found\"\n}\n```\nor\n```json\n{\n  \"status\": 500,\n  \"message\": \"Internal Server error\"\n}\n```\n\n**Summary:**  \nDeletes a specific blog post by its ID. Returns 200 on success, 404 if not found, and 500 for internal server error.\n```\n"),
			},
		},
	}

	resp, err := session.SendMessage(ctx, genai.Text("INSERT_INPUT_HERE"))
	if err != nil {
		log.Fatalf("Error sending message: %v", err)
	}

	for _, part := range resp.Candidates[0].Content.Parts {
		fmt.Printf("%v\n", part)
	}
}
